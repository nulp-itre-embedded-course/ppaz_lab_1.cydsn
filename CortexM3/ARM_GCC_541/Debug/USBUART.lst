ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 2


  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 3


  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 4


 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART.c **** }
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 5


 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 6


 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
  43 0006 0746     		mov	r7, r0
  44              	.LVL1:
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
  45              		.loc 1 257 0
  46 0008 404A     		ldr	r2, .L3
  47 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
  50              		.loc 1 259 0
  51 0012 1032     		adds	r2, r2, #16
  52 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
  55              		.loc 1 262 0
  56 001c 0126     		movs	r6, #1
  57 001e 3C4B     		ldr	r3, .L3+4
  58 0020 1E70     		strb	r6, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
  59              		.loc 1 264 0
  60 0022 0225     		movs	r5, #2
  61 0024 943B     		subs	r3, r3, #148
  62 0026 1D70     		strb	r5, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
  63              		.loc 1 268 0
  64 0028 02F5E252 		add	r2, r2, #7232
  65 002c 1B32     		adds	r2, r2, #27
  66 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  67 0030 03F07F03 		and	r3, r3, #127
  68 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  69              		.loc 1 269 0
  70 0036 0020     		movs	r0, #0
  71 0038 FFF7FEFF 		bl	CyDelayUs
  72              	.LVL2:
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 7


 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
  73              		.loc 1 274 0
  74 003c 354C     		ldr	r4, .L3+8
  75 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  76 0040 03F0F903 		and	r3, r3, #249
  77 0044 2370     		strb	r3, [r4]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
  78              		.loc 1 278 0
  79 0046 344A     		ldr	r2, .L3+12
  80 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 004a 03F0DF03 		and	r3, r3, #223
  82 004e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
  83              		.loc 1 281 0
  84 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  85 0052 3343     		orrs	r3, r3, r6
  86 0054 2370     		strb	r3, [r4]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
  87              		.loc 1 283 0
  88 0056 3046     		mov	r0, r6
  89 0058 FFF7FEFF 		bl	CyDelayUs
  90              	.LVL3:
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
  91              		.loc 1 285 0
  92 005c 2820     		movs	r0, #40
  93 005e FFF7FEFF 		bl	CyDelayUs
  94              	.LVL4:
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
  95              		.loc 1 287 0
  96 0062 2E4B     		ldr	r3, .L3+16
  97 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  98 0066 02F07F02 		and	r2, r2, #127
  99 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 100              		.loc 1 288 0
 101 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 102 006e 02F0BF02 		and	r2, r2, #191
 103 0072 1A70     		strb	r2, [r3]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 104              		.loc 1 291 0
 105 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 106 0076 2B43     		orrs	r3, r3, r5
 107 0078 2370     		strb	r3, [r4]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 8


 108              		.loc 1 292 0
 109 007a 2846     		mov	r0, r5
 110 007c FFF7FEFF 		bl	CyDelayUs
 111              	.LVL5:
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 112              		.loc 1 294 0
 113 0080 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 114 0082 43F00403 		orr	r3, r3, #4
 115 0086 2370     		strb	r3, [r4]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 116              		.loc 1 297 0
 117 0088 0024     		movs	r4, #0
 118 008a 254B     		ldr	r3, .L3+20
 119 008c 1C70     		strb	r4, [r3]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 120              		.loc 1 298 0
 121 008e 0133     		adds	r3, r3, #1
 122 0090 1C70     		strb	r4, [r3]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 312 0
 124 0092 3846     		mov	r0, r7
 125 0094 FFF7FEFF 		bl	CyExitCriticalSection
 126              	.LVL6:
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 9


 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 127              		.loc 1 331 0
 128 0098 0721     		movs	r1, #7
 129 009a 1720     		movs	r0, #23
 130 009c FFF7FEFF 		bl	CyIntSetPriority
 131              	.LVL7:
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 132              		.loc 1 332 0
 133 00a0 2049     		ldr	r1, .L3+24
 134 00a2 1720     		movs	r0, #23
 135 00a4 FFF7FEFF 		bl	CyIntSetVector
 136              	.LVL8:
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 137              		.loc 1 335 0
 138 00a8 0721     		movs	r1, #7
 139 00aa 1820     		movs	r0, #24
 140 00ac FFF7FEFF 		bl	CyIntSetPriority
 141              	.LVL9:
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 142              		.loc 1 336 0
 143 00b0 1D49     		ldr	r1, .L3+28
 144 00b2 1820     		movs	r0, #24
 145 00b4 FFF7FEFF 		bl	CyIntSetVector
 146              	.LVL10:
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 147              		.loc 1 340 0
 148 00b8 0721     		movs	r1, #7
 149 00ba 1520     		movs	r0, #21
 150 00bc FFF7FEFF 		bl	CyIntSetPriority
 151              	.LVL11:
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 152              		.loc 1 341 0
 153 00c0 1A49     		ldr	r1, .L3+32
 154 00c2 1520     		movs	r0, #21
 155 00c4 FFF7FEFF 		bl	CyIntSetVector
 156              	.LVL12:
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 157              		.loc 1 346 0
 158 00c8 0721     		movs	r1, #7
 159 00ca 2046     		mov	r0, r4
 160 00cc FFF7FEFF 		bl	CyIntSetPriority
 161              	.LVL13:
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 162              		.loc 1 347 0
 163 00d0 1749     		ldr	r1, .L3+36
 164 00d2 2046     		mov	r0, r4
 165 00d4 FFF7FEFF 		bl	CyIntSetVector
 166              	.LVL14:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 10


 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 167              		.loc 1 352 0
 168 00d8 0721     		movs	r1, #7
 169 00da 3046     		mov	r0, r6
 170 00dc FFF7FEFF 		bl	CyIntSetPriority
 171              	.LVL15:
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 172              		.loc 1 353 0
 173 00e0 1449     		ldr	r1, .L3+40
 174 00e2 3046     		mov	r0, r6
 175 00e4 FFF7FEFF 		bl	CyIntSetVector
 176              	.LVL16:
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 177              		.loc 1 358 0
 178 00e8 0721     		movs	r1, #7
 179 00ea 2846     		mov	r0, r5
 180 00ec FFF7FEFF 		bl	CyIntSetPriority
 181              	.LVL17:
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 182              		.loc 1 359 0
 183 00f0 1149     		ldr	r1, .L3+44
 184 00f2 2846     		mov	r0, r5
 185 00f4 FFF7FEFF 		bl	CyIntSetVector
 186              	.LVL18:
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 11


 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 187              		.loc 1 401 0
 188 00f8 0721     		movs	r1, #7
 189 00fa 0C20     		movs	r0, #12
 190 00fc FFF7FEFF 		bl	CyIntSetPriority
 191              	.LVL19:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 192              		.loc 1 402 0
 193 0100 0E49     		ldr	r1, .L3+48
 194 0102 0C20     		movs	r0, #12
 195 0104 FFF7FEFF 		bl	CyIntSetVector
 196              	.LVL20:
 197 0108 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 198              	.LVL21:
 199              	.L4:
 200 010a 00BF     		.align	2
 201              	.L3:
 202 010c A5430040 		.word	1073759141
 203 0110 9D600040 		.word	1073766557
 204 0114 94430040 		.word	1073759124
 205 0118 12600040 		.word	1073766418
 206 011c F8510040 		.word	1073762808
 207 0120 84600040 		.word	1073766532
 208 0124 00000000 		.word	USBUART_BUS_RESET_ISR
 209 0128 00000000 		.word	USBUART_EP_0_ISR
 210 012c 00000000 		.word	USBUART_SOF_ISR
 211 0130 00000000 		.word	USBUART_EP_1_ISR
 212 0134 00000000 		.word	USBUART_EP_2_ISR
 213 0138 00000000 		.word	USBUART_EP_3_ISR
 214 013c 00000000 		.word	USBUART_DP_ISR
 215              		.cfi_endproc
 216              	.LFE1:
 217              		.size	USBUART_Init, .-USBUART_Init
 218              		.section	.text.USBUART_InitComponent,"ax",%progbits
 219              		.align	2
 220              		.global	USBUART_InitComponent
 221              		.thumb
 222              		.thumb_func
 223              		.type	USBUART_InitComponent, %function
 224              	USBUART_InitComponent:
 225              	.LFB2:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 12


 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 13


 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 226              		.loc 1 461 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL22:
 231 0000 08B5     		push	{r3, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 235              		.loc 1 476 0
 236 0002 214B     		ldr	r3, .L12
 237 0004 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 238              		.loc 1 479 0
 239 0006 0023     		movs	r3, #0
 240 0008 204A     		ldr	r2, .L12+4
 241 000a 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 242              		.loc 1 480 0
 243 000c 204A     		ldr	r2, .L12+8
 244 000e 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 245              		.loc 1 481 0
 246 0010 204A     		ldr	r2, .L12+12
 247 0012 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 248              		.loc 1 482 0
 249 0014 204A     		ldr	r2, .L12+16
 250 0016 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 251              		.loc 1 483 0
 252 0018 204A     		ldr	r2, .L12+20
 253 001a 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 254              		.loc 1 484 0
 255 001c 204A     		ldr	r2, .L12+24
 256 001e 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 14


 257              		.loc 1 485 0
 258 0020 204A     		ldr	r2, .L12+28
 259 0022 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 260              		.loc 1 493 0
 261 0024 204B     		ldr	r3, .L12+32
 262 0026 4FF40002 		mov	r2, #8388608
 263 002a 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 264              		.loc 1 494 0
 265 002c 4FF08072 		mov	r2, #16777216
 266 0030 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 267              		.loc 1 497 0
 268 0032 4FF40012 		mov	r2, #2097152
 269 0036 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 270              		.loc 1 501 0
 271 0038 0122     		movs	r2, #1
 272 003a 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 273              		.loc 1 505 0
 274 003c 0222     		movs	r2, #2
 275 003e 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 276              		.loc 1 509 0
 277 0040 0422     		movs	r2, #4
 278 0042 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 15


 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 279              		.loc 1 573 0
 280 0044 11B1     		cbz	r1, .L7
 281 0046 0129     		cmp	r1, #1
 282 0048 06D0     		beq	.L8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 16


 283 004a 0BE0     		b	.L10
 284              	.L7:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 285              		.loc 1 577 0
 286 004c 174A     		ldr	r2, .L12+36
 287 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 288 0050 03F0FE03 		and	r3, r3, #254
 289 0054 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 290              		.loc 1 578 0
 291 0056 0AE0     		b	.L9
 292              	.L8:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 293              		.loc 1 582 0
 294 0058 144A     		ldr	r2, .L12+36
 295 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 296 005c 43F00103 		orr	r3, r3, #1
 297 0060 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 298              		.loc 1 583 0
 299 0062 04E0     		b	.L9
 300              	.L10:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 301              		.loc 1 591 0
 302 0064 114A     		ldr	r2, .L12+36
 303 0066 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 304 0068 43F00103 		orr	r3, r3, #1
 305 006c 1370     		strb	r3, [r2]
 306              	.L9:
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 17


 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 307              		.loc 1 627 0
 308 006e 0322     		movs	r2, #3
 309 0070 0F4B     		ldr	r3, .L12+40
 310 0072 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 311              		.loc 1 630 0
 312 0074 8022     		movs	r2, #128
 313 0076 203B     		subs	r3, r3, #32
 314 0078 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 315              		.loc 1 631 0
 316 007a 0120     		movs	r0, #1
 317              	.LVL23:
 318 007c FFF7FEFF 		bl	CyDelayCycles
 319              	.LVL24:
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 320              		.loc 1 635 0
 321 0080 0422     		movs	r2, #4
 322 0082 0C4B     		ldr	r3, .L12+44
 323 0084 1A70     		strb	r2, [r3]
 324 0086 08BD     		pop	{r3, pc}
 325              	.L13:
 326              		.align	2
 327              	.L12:
 328 0088 00000000 		.word	USBUART_device
 329 008c 00000000 		.word	USBUART_transferState
 330 0090 00000000 		.word	USBUART_configurationChanged
 331 0094 00000000 		.word	USBUART_configuration
 332 0098 00000000 		.word	USBUART_interfaceNumber
 333 009c 00000000 		.word	USBUART_deviceAddress
 334 00a0 00000000 		.word	USBUART_deviceStatus
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 18


 335 00a4 00000000 		.word	USBUART_lastPacketSize
 336 00a8 00E100E0 		.word	-536813312
 337 00ac 09600040 		.word	1073766409
 338 00b0 28600040 		.word	1073766440
 339 00b4 12600040 		.word	1073766418
 340              		.cfi_endproc
 341              	.LFE2:
 342              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 343              		.section	.text.USBUART_Start,"ax",%progbits
 344              		.align	2
 345              		.global	USBUART_Start
 346              		.thumb
 347              		.thumb_func
 348              		.type	USBUART_Start, %function
 349              	USBUART_Start:
 350              	.LFB0:
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 351              		.loc 1 187 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              	.LVL25:
 356 0000 38B5     		push	{r3, r4, r5, lr}
 357              		.cfi_def_cfa_offset 16
 358              		.cfi_offset 3, -16
 359              		.cfi_offset 4, -12
 360              		.cfi_offset 5, -8
 361              		.cfi_offset 14, -4
 362 0002 0446     		mov	r4, r0
 363 0004 0D46     		mov	r5, r1
 188:Generated_Source\PSoC5/USBUART.c ****     {
 364              		.loc 1 188 0
 365 0006 064B     		ldr	r3, .L17
 366 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 367 000a 23B9     		cbnz	r3, .L15
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 368              		.loc 1 190 0
 369 000c FFF7FEFF 		bl	USBUART_Init
 370              	.LVL26:
 191:Generated_Source\PSoC5/USBUART.c ****     }
 371              		.loc 1 191 0
 372 0010 0122     		movs	r2, #1
 373 0012 034B     		ldr	r3, .L17
 374 0014 1A70     		strb	r2, [r3]
 375              	.L15:
 194:Generated_Source\PSoC5/USBUART.c **** }
 376              		.loc 1 194 0
 377 0016 2946     		mov	r1, r5
 378 0018 2046     		mov	r0, r4
 379 001a FFF7FEFF 		bl	USBUART_InitComponent
 380              	.LVL27:
 381 001e 38BD     		pop	{r3, r4, r5, pc}
 382              	.L18:
 383              		.align	2
 384              	.L17:
 385 0020 00000000 		.word	.LANCHOR0
 386              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 19


 387              	.LFE0:
 388              		.size	USBUART_Start, .-USBUART_Start
 389              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 390              		.align	2
 391              		.global	USBUART_ReInitComponent
 392              		.thumb
 393              		.thumb_func
 394              		.type	USBUART_ReInitComponent, %function
 395              	USBUART_ReInitComponent:
 396              	.LFB3:
 636:Generated_Source\PSoC5/USBUART.c **** }
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 397              		.loc 1 672 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 20


 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 402              		.loc 1 686 0
 403 0000 0023     		movs	r3, #0
 404 0002 0A4A     		ldr	r2, .L20
 405 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 406              		.loc 1 687 0
 407 0006 0A4A     		ldr	r2, .L20+4
 408 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 409              		.loc 1 688 0
 410 000a 0A4A     		ldr	r2, .L20+8
 411 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 412              		.loc 1 689 0
 413 000e 0A4A     		ldr	r2, .L20+12
 414 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 415              		.loc 1 690 0
 416 0012 0A4A     		ldr	r2, .L20+16
 417 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 418              		.loc 1 691 0
 419 0016 0A4A     		ldr	r2, .L20+20
 420 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 421              		.loc 1 692 0
 422 001a 0A4A     		ldr	r2, .L20+24
 423 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 424              		.loc 1 699 0
 425 001e 0322     		movs	r2, #3
 426 0020 094B     		ldr	r3, .L20+28
 427 0022 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 428              		.loc 1 703 0
 429 0024 8022     		movs	r2, #128
 430 0026 203B     		subs	r3, r3, #32
 431 0028 1A70     		strb	r2, [r3]
 432 002a 7047     		bx	lr
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 21


 433              	.L21:
 434              		.align	2
 435              	.L20:
 436 002c 00000000 		.word	USBUART_transferState
 437 0030 00000000 		.word	USBUART_configurationChanged
 438 0034 00000000 		.word	USBUART_configuration
 439 0038 00000000 		.word	USBUART_interfaceNumber
 440 003c 00000000 		.word	USBUART_deviceAddress
 441 0040 00000000 		.word	USBUART_deviceStatus
 442 0044 00000000 		.word	USBUART_lastPacketSize
 443 0048 28600040 		.word	1073766440
 444              		.cfi_endproc
 445              	.LFE3:
 446              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 447              		.section	.text.USBUART_Stop,"ax",%progbits
 448              		.align	2
 449              		.global	USBUART_Stop
 450              		.thumb
 451              		.thumb_func
 452              		.type	USBUART_Stop, %function
 453              	USBUART_Stop:
 454              	.LFB4:
 704:Generated_Source\PSoC5/USBUART.c **** }
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 455              		.loc 1 730 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459 0000 08B5     		push	{r3, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 22


 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 463              		.loc 1 738 0
 464 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 465              	.LVL28:
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 466              		.loc 1 741 0
 467 0006 224A     		ldr	r2, .L24
 468 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 469 000a 03F07F03 		and	r3, r3, #127
 470 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 471              		.loc 1 744 0
 472 0010 0A32     		adds	r2, r2, #10
 473 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 474 0014 03F0FB03 		and	r3, r3, #251
 475 0018 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 476              		.loc 1 751 0
 477 001a A2F5E352 		sub	r2, r2, #7264
 478 001e 0D3A     		subs	r2, r2, #13
 479 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 480 0022 03F0FE03 		and	r3, r3, #254
 481 0026 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 482              		.loc 1 752 0
 483 0028 1032     		adds	r2, r2, #16
 484 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 485 002c 03F0FE03 		and	r3, r3, #254
 486 0030 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 487              		.loc 1 756 0
 488 0032 184B     		ldr	r3, .L24+4
 489 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 490 0036 42F08002 		orr	r2, r2, #128
 491 003a 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 492              		.loc 1 757 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 23


 493 003c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 003e 42F04002 		orr	r2, r2, #64
 495 0042 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 496              		.loc 1 761 0
 497 0044 FFF7FEFF 		bl	CyExitCriticalSection
 498              	.LVL29:
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 499              		.loc 1 770 0
 500 0048 134B     		ldr	r3, .L24+8
 501 004a 4FF40002 		mov	r2, #8388608
 502 004e 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 503              		.loc 1 771 0
 504 0050 4FF08072 		mov	r2, #16777216
 505 0054 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 506              		.loc 1 774 0
 507 0056 4FF40012 		mov	r2, #2097152
 508 005a 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 509              		.loc 1 778 0
 510 005c 0122     		movs	r2, #1
 511 005e 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 512              		.loc 1 782 0
 513 0060 0222     		movs	r2, #2
 514 0062 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 515              		.loc 1 786 0
 516 0064 0422     		movs	r2, #4
 517 0066 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 24


 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 518              		.loc 1 811 0
 519 0068 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 520              	.LVL30:
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 521              		.loc 1 812 0
 522 006c 4FF48052 		mov	r2, #4096
 523 0070 0A4B     		ldr	r3, .L24+12
 524 0072 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 525              		.loc 1 818 0
 526 0074 0023     		movs	r3, #0
 527 0076 0A4A     		ldr	r2, .L24+16
 528 0078 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 529              		.loc 1 819 0
 530 007a 0A4A     		ldr	r2, .L24+20
 531 007c 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 532              		.loc 1 820 0
 533 007e 0A4A     		ldr	r2, .L24+24
 534 0080 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 535              		.loc 1 821 0
 536 0082 0A4A     		ldr	r2, .L24+28
 537 0084 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 538              		.loc 1 822 0
 539 0086 0A4A     		ldr	r2, .L24+32
 540 0088 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 25


 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 541              		.loc 1 825 0
 542 008a 0A4A     		ldr	r2, .L24+36
 543 008c 1370     		strb	r3, [r2]
 544 008e 08BD     		pop	{r3, pc}
 545              	.L25:
 546              		.align	2
 547              	.L24:
 548 0090 08600040 		.word	1073766408
 549 0094 F8510040 		.word	1073762808
 550 0098 80E100E0 		.word	-536813184
 551 009c 80E200E0 		.word	-536812928
 552 00a0 00000000 		.word	USBUART_configurationChanged
 553 00a4 00000000 		.word	USBUART_configuration
 554 00a8 00000000 		.word	USBUART_interfaceNumber
 555 00ac 00000000 		.word	USBUART_deviceAddress
 556 00b0 00000000 		.word	USBUART_deviceStatus
 557 00b4 00000000 		.word	.LANCHOR0
 558              		.cfi_endproc
 559              	.LFE4:
 560              		.size	USBUART_Stop, .-USBUART_Stop
 561              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 562              		.align	2
 563              		.global	USBUART_CheckActivity
 564              		.thumb
 565              		.thumb_func
 566              		.type	USBUART_CheckActivity, %function
 567              	USBUART_CheckActivity:
 568              	.LFB5:
 826:Generated_Source\PSoC5/USBUART.c **** }
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 569              		.loc 1 850 0
 570              		.cfi_startproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 26


 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 574              		.loc 1 851 0
 575 0000 064A     		ldr	r2, .L28
 576 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 577 0004 DBB2     		uxtb	r3, r3
 578              	.LVL31:
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 579              		.loc 1 854 0
 580 0006 03F0FB01 		and	r1, r3, #251
 581 000a 1170     		strb	r1, [r2]
 582 000c 03F00403 		and	r3, r3, #4
 583              	.LVL32:
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 584              		.loc 1 857 0
 585 0010 03F0FF00 		and	r0, r3, #255
 586 0014 03B1     		cbz	r3, .L27
 587 0016 0120     		movs	r0, #1
 588              	.L27:
 858:Generated_Source\PSoC5/USBUART.c **** }
 589              		.loc 1 858 0 discriminator 4
 590 0018 7047     		bx	lr
 591              	.L29:
 592 001a 00BF     		.align	2
 593              	.L28:
 594 001c 09600040 		.word	1073766409
 595              		.cfi_endproc
 596              	.LFE5:
 597              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 598              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 599              		.align	2
 600              		.global	USBUART_GetConfiguration
 601              		.thumb
 602              		.thumb_func
 603              		.type	USBUART_GetConfiguration, %function
 604              	USBUART_GetConfiguration:
 605              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 27


 873:Generated_Source\PSoC5/USBUART.c **** {
 606              		.loc 1 873 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 611              		.loc 1 874 0
 612 0000 014B     		ldr	r3, .L31
 613 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART.c **** }
 614              		.loc 1 875 0
 615 0004 7047     		bx	lr
 616              	.L32:
 617 0006 00BF     		.align	2
 618              	.L31:
 619 0008 00000000 		.word	USBUART_configuration
 620              		.cfi_endproc
 621              	.LFE6:
 622              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 623              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 624              		.align	2
 625              		.global	USBUART_IsConfigurationChanged
 626              		.thumb
 627              		.thumb_func
 628              		.type	USBUART_IsConfigurationChanged, %function
 629              	USBUART_IsConfigurationChanged:
 630              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 631              		.loc 1 899 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 28


 636              	.LVL33:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 637              		.loc 1 902 0
 638 0000 064B     		ldr	r3, .L36
 639 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 0004 13F0FF0F 		tst	r3, #255
 641 0008 05D0     		beq	.L35
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 642              		.loc 1 904 0
 643 000a 044B     		ldr	r3, .L36
 644 000c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 645 000e C0B2     		uxtb	r0, r0
 646              	.LVL34:
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 647              		.loc 1 905 0
 648 0010 0022     		movs	r2, #0
 649 0012 1A70     		strb	r2, [r3]
 650 0014 7047     		bx	lr
 651              	.LVL35:
 652              	.L35:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 653              		.loc 1 900 0
 654 0016 0020     		movs	r0, #0
 655              	.LVL36:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART.c **** }
 656              		.loc 1 909 0
 657 0018 7047     		bx	lr
 658              	.L37:
 659 001a 00BF     		.align	2
 660              	.L36:
 661 001c 00000000 		.word	USBUART_configurationChanged
 662              		.cfi_endproc
 663              	.LFE7:
 664              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 665              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 666              		.align	2
 667              		.global	USBUART_GetInterfaceSetting
 668              		.thumb
 669              		.thumb_func
 670              		.type	USBUART_GetInterfaceSetting, %function
 671              	USBUART_GetInterfaceSetting:
 672              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 29


 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 673              		.loc 1 929 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678              	.LVL37:
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 679              		.loc 1 930 0
 680 0000 014B     		ldr	r3, .L39
 681 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 682              	.LVL38:
 931:Generated_Source\PSoC5/USBUART.c **** }
 683              		.loc 1 931 0
 684 0004 7047     		bx	lr
 685              	.L40:
 686 0006 00BF     		.align	2
 687              	.L39:
 688 0008 00000000 		.word	USBUART_interfaceSetting
 689              		.cfi_endproc
 690              	.LFE8:
 691              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 692              		.section	.text.USBUART_GetEPState,"ax",%progbits
 693              		.align	2
 694              		.global	USBUART_GetEPState
 695              		.thumb
 696              		.thumb_func
 697              		.type	USBUART_GetEPState, %function
 698              	USBUART_GetEPState:
 699              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 30


 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 700              		.loc 1 960 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL39:
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 706              		.loc 1 961 0
 707 0000 00EB4000 		add	r0, r0, r0, lsl #1
 708              	.LVL40:
 709 0004 8300     		lsls	r3, r0, #2
 710 0006 024A     		ldr	r2, .L42
 711 0008 1344     		add	r3, r3, r2
 712 000a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART.c **** }
 713              		.loc 1 962 0
 714 000c 7047     		bx	lr
 715              	.L43:
 716 000e 00BF     		.align	2
 717              	.L42:
 718 0010 00000000 		.word	USBUART_EP
 719              		.cfi_endproc
 720              	.LFE9:
 721              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 722              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 723              		.align	2
 724              		.global	USBUART_GetEPCount
 725              		.thumb
 726              		.thumb_func
 727              		.type	USBUART_GetEPCount, %function
 728              	USBUART_GetEPCount:
 729              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 31


 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 730              		.loc 1 983 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
 735              	.LVL41:
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 736              		.loc 1 986 0
 737 0000 431E     		subs	r3, r0, #1
 738 0002 DBB2     		uxtb	r3, r3
 739 0004 072B     		cmp	r3, #7
 740 0006 0BD8     		bhi	.L46
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 741              		.loc 1 989 0
 742 0008 064B     		ldr	r3, .L47
 743 000a 0001     		lsls	r0, r0, #4
 744              	.LVL42:
 745 000c 1A18     		adds	r2, r3, r0
 746 000e 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 747 0010 00F00F00 		and	r0, r0, #15
 748              	.LVL43:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 749              		.loc 1 990 0
 750 0014 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 751 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 752              	.LVL44:
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 753              		.loc 1 991 0
 754 001a 0238     		subs	r0, r0, #2
 755              	.LVL45:
 756 001c 80B2     		uxth	r0, r0
 757              	.LVL46:
 758 001e 7047     		bx	lr
 759              	.LVL47:
 760              	.L46:
 984:Generated_Source\PSoC5/USBUART.c **** 
 761              		.loc 1 984 0
 762 0020 0020     		movs	r0, #0
 763              	.LVL48:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART.c **** }
 764              		.loc 1 995 0
 765 0022 7047     		bx	lr
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 32


 766              	.L48:
 767              		.align	2
 768              	.L47:
 769 0024 FC5F0040 		.word	1073766396
 770              		.cfi_endproc
 771              	.LFE10:
 772              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 773              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 774              		.align	2
 775              		.global	USBUART_LoadInEP
 776              		.thumb
 777              		.thumb_func
 778              		.type	USBUART_LoadInEP, %function
 779              	USBUART_LoadInEP:
 780              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 33


1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 34


1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 35


1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 36


1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 37


1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 38


1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 781              		.loc 1 1344 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 786              	.LVL49:
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 787              		.loc 1 1345 0
 788 0000 431E     		subs	r3, r0, #1
 789 0002 DBB2     		uxtb	r3, r3
 790 0004 072B     		cmp	r3, #7
 791 0006 3CD8     		bhi	.L58
1344:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 792              		.loc 1 1344 0
 793 0008 F0B4     		push	{r4, r5, r6, r7}
 794              		.cfi_def_cfa_offset 16
 795              		.cfi_offset 4, -16
 796              		.cfi_offset 5, -12
 797              		.cfi_offset 6, -8
 798              		.cfi_offset 7, -4
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 799              		.loc 1 1349 0
 800 000a 0746     		mov	r7, r0
 801 000c 00EB4004 		add	r4, r0, r0, lsl #1
 802 0010 A300     		lsls	r3, r4, #2
 803 0012 1C4C     		ldr	r4, .L59
 804 0014 2344     		add	r3, r3, r4
 805 0016 DB88     		ldrh	r3, [r3, #6]
 806 0018 9BB2     		uxth	r3, r3
 807 001a C3F50073 		rsb	r3, r3, #512
 808 001e 9A42     		cmp	r2, r3
 809 0020 08D9     		bls	.L51
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 39


1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 810              		.loc 1 1351 0
 811 0022 00EB4002 		add	r2, r0, r0, lsl #1
 812              	.LVL50:
 813 0026 9300     		lsls	r3, r2, #2
 814 0028 2344     		add	r3, r3, r4
 815 002a DA88     		ldrh	r2, [r3, #6]
 816 002c 92B2     		uxth	r2, r2
 817 002e C2F50072 		rsb	r2, r2, #512
 818 0032 92B2     		uxth	r2, r2
 819              	.LVL51:
 820              	.L51:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 821              		.loc 1 1356 0
 822 0034 00EB4004 		add	r4, r0, r0, lsl #1
 823 0038 A300     		lsls	r3, r4, #2
 824 003a 124C     		ldr	r4, .L59
 825 003c 2344     		add	r3, r3, r4
 826 003e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 827 0040 43EA1223 		orr	r3, r3, r2, lsr #8
 828 0044 104D     		ldr	r5, .L59+4
 829 0046 0401     		lsls	r4, r0, #4
 830 0048 2E19     		adds	r6, r5, r4
 831 004a 2B55     		strb	r3, [r5, r4]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 832              		.loc 1 1357 0
 833 004c D3B2     		uxtb	r3, r2
 834 004e 7370     		strb	r3, [r6, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 835              		.loc 1 1360 0
 836 0050 39B9     		cbnz	r1, .L55
 837              	.LBB2:
 838 0052 09E0     		b	.L53
 839              	.LVL52:
 840              	.L54:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 841              		.loc 1 1366 0 discriminator 3
 842 0054 CE5C     		ldrb	r6, [r1, r3]	@ zero_extendqisi2
 843 0056 3D01     		lsls	r5, r7, #4
 844 0058 0C4C     		ldr	r4, .L59+8
 845 005a 6655     		strb	r6, [r4, r5]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 846              		.loc 1 1364 0 discriminator 3
 847 005c 0133     		adds	r3, r3, #1
 848              	.LVL53:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 40


 849 005e 9BB2     		uxth	r3, r3
 850              	.LVL54:
 851 0060 00E0     		b	.L52
 852              	.LVL55:
 853              	.L55:
 854              	.LBE2:
 855 0062 0023     		movs	r3, #0
 856              	.L52:
 857              	.LVL56:
 858              	.LBB3:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 859              		.loc 1 1364 0 is_stmt 0 discriminator 1
 860 0064 9A42     		cmp	r2, r3
 861 0066 F5D8     		bhi	.L54
 862              	.LVL57:
 863              	.L53:
 864              	.LBE3:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 865              		.loc 1 1371 0 is_stmt 1
 866 0068 4200     		lsls	r2, r0, #1
 867              	.LVL58:
 868 006a 0244     		add	r2, r2, r0
 869 006c 9300     		lsls	r3, r2, #2
 870 006e 054A     		ldr	r2, .L59
 871 0070 1344     		add	r3, r3, r2
 872 0072 0022     		movs	r2, #0
 873 0074 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 874              		.loc 1 1374 0
 875 0076 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 876 0078 D2B2     		uxtb	r2, r2
 877 007a 0001     		lsls	r0, r0, #4
 878              	.LVL59:
 879 007c 044B     		ldr	r3, .L59+12
 880 007e 1A54     		strb	r2, [r3, r0]
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 41


1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 42


1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 43


1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 44


1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 881              		.loc 1 1604 0
 882 0080 F0BC     		pop	{r4, r5, r6, r7}
 883              		.cfi_restore 7
 884              		.cfi_restore 6
 885              		.cfi_restore 5
 886              		.cfi_restore 4
 887              		.cfi_def_cfa_offset 0
 888              	.L58:
 889 0082 7047     		bx	lr
 890              	.L60:
 891              		.align	2
 892              	.L59:
 893 0084 00000000 		.word	USBUART_EP
 894 0088 FC5F0040 		.word	1073766396
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 45


 895 008c 78600040 		.word	1073766520
 896 0090 FE5F0040 		.word	1073766398
 897              		.cfi_endproc
 898              	.LFE11:
 899              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 900              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 901              		.align	2
 902              		.global	USBUART_EnableOutEP
 903              		.thumb
 904              		.thumb_func
 905              		.type	USBUART_EnableOutEP, %function
 906              	USBUART_EnableOutEP:
 907              	.LFB13:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 46


1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 47


1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 48


1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 49


1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART.c **** }
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 50


1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 51


1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 52


1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 53


2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 54


2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 55


2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 56


2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 57


2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 908              		.loc 1 2277 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913              	.LVL60:
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 914              		.loc 1 2278 0
 915 0000 431E     		subs	r3, r0, #1
 916 0002 DBB2     		uxtb	r3, r3
 917 0004 072B     		cmp	r3, #7
 918 0006 0BD8     		bhi	.L61
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 919              		.loc 1 2280 0
 920 0008 4200     		lsls	r2, r0, #1
 921 000a 0244     		add	r2, r2, r0
 922 000c 9300     		lsls	r3, r2, #2
 923 000e 054A     		ldr	r2, .L63
 924 0010 1344     		add	r3, r3, r2
 925 0012 0022     		movs	r2, #0
 926 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 927              		.loc 1 2283 0
 928 0016 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 929 0018 D2B2     		uxtb	r2, r2
 930 001a 0001     		lsls	r0, r0, #4
 931              	.LVL61:
 932 001c 024B     		ldr	r3, .L63+4
 933 001e 1A54     		strb	r2, [r3, r0]
 934              	.L61:
 935 0020 7047     		bx	lr
 936              	.L64:
 937 0022 00BF     		.align	2
 938              	.L63:
 939 0024 00000000 		.word	USBUART_EP
 940 0028 FE5F0040 		.word	1073766398
 941              		.cfi_endproc
 942              	.LFE13:
 943              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 944              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 945              		.align	2
 946              		.global	USBUART_ReadOutEP
 947              		.thumb
 948              		.thumb_func
 949              		.type	USBUART_ReadOutEP, %function
 950              	USBUART_ReadOutEP:
 951              	.LFB12:
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 952              		.loc 1 1655 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 58


 956              	.LVL62:
 957 0000 70B5     		push	{r4, r5, r6, lr}
 958              		.cfi_def_cfa_offset 16
 959              		.cfi_offset 4, -16
 960              		.cfi_offset 5, -12
 961              		.cfi_offset 6, -8
 962              		.cfi_offset 14, -4
1656:Generated_Source\PSoC5/USBUART.c ****     {
 963              		.loc 1 1656 0
 964 0002 D9B1     		cbz	r1, .L70
 965 0004 0546     		mov	r5, r0
 966 0006 1446     		mov	r4, r2
 967 0008 0E46     		mov	r6, r1
1656:Generated_Source\PSoC5/USBUART.c ****     {
 968              		.loc 1 1656 0 is_stmt 0 discriminator 1
 969 000a C8B1     		cbz	r0, .L71
1656:Generated_Source\PSoC5/USBUART.c ****     {
 970              		.loc 1 1656 0 discriminator 2
 971 000c 0828     		cmp	r0, #8
 972 000e 19D8     		bhi	.L72
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 973              		.loc 1 1660 0 is_stmt 1
 974 0010 FFF7FEFF 		bl	USBUART_GetEPCount
 975              	.LVL63:
 976 0014 A042     		cmp	r0, r4
 977 0016 03D2     		bcs	.L67
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 978              		.loc 1 1660 0 is_stmt 0 discriminator 1
 979 0018 2846     		mov	r0, r5
 980 001a FFF7FEFF 		bl	USBUART_GetEPCount
 981              	.LVL64:
 982 001e 0446     		mov	r4, r0
 983              	.L67:
 984              	.LVL65:
 985              	.LBB4:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 986              		.loc 1 1667 0 is_stmt 1 discriminator 4
 987 0020 0023     		movs	r3, #0
 988 0022 05E0     		b	.L68
 989              	.LVL66:
 990              	.L69:
1669:Generated_Source\PSoC5/USBUART.c ****             }
 991              		.loc 1 1669 0 discriminator 3
 992 0024 2901     		lsls	r1, r5, #4
 993 0026 094A     		ldr	r2, .L74
 994 0028 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 995 002a F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 996              		.loc 1 1667 0 discriminator 3
 997 002c 0133     		adds	r3, r3, #1
 998              	.LVL67:
 999 002e 9BB2     		uxth	r3, r3
 1000              	.LVL68:
 1001              	.L68:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1002              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1003 0030 A342     		cmp	r3, r4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 59


 1004 0032 F7D3     		bcc	.L69
 1005              	.LBE4:
1674:Generated_Source\PSoC5/USBUART.c ****     #else
 1006              		.loc 1 1674 0 is_stmt 1
 1007 0034 2846     		mov	r0, r5
 1008 0036 FFF7FEFF 		bl	USBUART_EnableOutEP
 1009              	.LVL69:
 1010 003a 04E0     		b	.L66
 1011              	.LVL70:
 1012              	.L70:
1820:Generated_Source\PSoC5/USBUART.c ****     }
 1013              		.loc 1 1820 0
 1014 003c 0024     		movs	r4, #0
 1015 003e 02E0     		b	.L66
 1016              	.L71:
 1017 0040 0024     		movs	r4, #0
 1018 0042 00E0     		b	.L66
 1019              	.L72:
 1020 0044 0024     		movs	r4, #0
 1021              	.LVL71:
 1022              	.L66:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1023              		.loc 1 1824 0
 1024 0046 2046     		mov	r0, r4
 1025 0048 70BD     		pop	{r4, r5, r6, pc}
 1026              	.LVL72:
 1027              	.L75:
 1028 004a 00BF     		.align	2
 1029              	.L74:
 1030 004c 78600040 		.word	1073766520
 1031              		.cfi_endproc
 1032              	.LFE12:
 1033              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1034              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1035              		.align	2
 1036              		.global	USBUART_DisableOutEP
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	USBUART_DisableOutEP, %function
 1040              	USBUART_DisableOutEP:
 1041              	.LFB14:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 60


2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1042              		.loc 1 2301 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047              	.LVL73:
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1048              		.loc 1 2302 0
 1049 0000 431E     		subs	r3, r0, #1
 1050 0002 DBB2     		uxtb	r3, r3
 1051 0004 072B     		cmp	r3, #7
 1052 0006 03D8     		bhi	.L76
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1053              		.loc 1 2305 0
 1054 0008 0001     		lsls	r0, r0, #4
 1055              	.LVL74:
 1056 000a 024B     		ldr	r3, .L78
 1057 000c 0822     		movs	r2, #8
 1058 000e 1A54     		strb	r2, [r3, r0]
 1059              	.L76:
 1060 0010 7047     		bx	lr
 1061              	.L79:
 1062 0012 00BF     		.align	2
 1063              	.L78:
 1064 0014 FE5F0040 		.word	1073766398
 1065              		.cfi_endproc
 1066              	.LFE14:
 1067              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1068              		.section	.text.USBUART_Force,"ax",%progbits
 1069              		.align	2
 1070              		.global	USBUART_Force
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	USBUART_Force, %function
 1074              	USBUART_Force:
 1075              	.LFB15:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 61


2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1076              		.loc 1 2331 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081              	.LVL75:
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1082              		.loc 1 2335 0
 1083 0000 014B     		ldr	r3, .L81
 1084 0002 1870     		strb	r0, [r3]
 1085 0004 7047     		bx	lr
 1086              	.L82:
 1087 0006 00BF     		.align	2
 1088              	.L81:
 1089 0008 10600040 		.word	1073766416
 1090              		.cfi_endproc
 1091              	.LFE15:
 1092              		.size	USBUART_Force, .-USBUART_Force
 1093              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1094              		.align	2
 1095              		.global	USBUART_GetEPAckState
 1096              		.thumb
 1097              		.thumb_func
 1098              		.type	USBUART_GetEPAckState, %function
 1099              	USBUART_GetEPAckState:
 1100              	.LFB16:
2336:Generated_Source\PSoC5/USBUART.c **** }
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 62


2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1101              		.loc 1 2356 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 0
 1104              		@ frame_needed = 0, uses_anonymous_args = 0
 1105              		@ link register save eliminated.
 1106              	.LVL76:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1107              		.loc 1 2359 0
 1108 0000 431E     		subs	r3, r0, #1
 1109 0002 DBB2     		uxtb	r3, r3
 1110 0004 072B     		cmp	r3, #7
 1111 0006 06D8     		bhi	.L85
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1112              		.loc 1 2361 0
 1113 0008 0001     		lsls	r0, r0, #4
 1114              	.LVL77:
 1115 000a 044B     		ldr	r3, .L86
 1116 000c 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1117 000e 00F01000 		and	r0, r0, #16
 1118 0012 C0B2     		uxtb	r0, r0
 1119              	.LVL78:
 1120 0014 7047     		bx	lr
 1121              	.LVL79:
 1122              	.L85:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1123              		.loc 1 2357 0
 1124 0016 0020     		movs	r0, #0
 1125              	.LVL80:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART.c **** }
 1126              		.loc 1 2365 0
 1127 0018 7047     		bx	lr
 1128              	.L87:
 1129 001a 00BF     		.align	2
 1130              	.L86:
 1131 001c FE5F0040 		.word	1073766398
 1132              		.cfi_endproc
 1133              	.LFE16:
 1134              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1135              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1136              		.align	2
 1137              		.global	USBUART_SetPowerStatus
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	USBUART_SetPowerStatus, %function
 1141              	USBUART_SetPowerStatus:
 1142              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 63


2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1143              		.loc 1 2397 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 0
 1146              		@ frame_needed = 0, uses_anonymous_args = 0
 1147              		@ link register save eliminated.
 1148              	.LVL81:
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1149              		.loc 1 2398 0
 1150 0000 28B1     		cbz	r0, .L89
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1151              		.loc 1 2400 0
 1152 0002 064A     		ldr	r2, .L91
 1153 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1154 0006 43F00103 		orr	r3, r3, #1
 1155 000a 1370     		strb	r3, [r2]
 1156 000c 7047     		bx	lr
 1157              	.L89:
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1158              		.loc 1 2404 0
 1159 000e 034A     		ldr	r2, .L91
 1160 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1161 0012 03F0FE03 		and	r3, r3, #254
 1162 0016 1370     		strb	r3, [r2]
 1163 0018 7047     		bx	lr
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 64


 1164              	.L92:
 1165 001a 00BF     		.align	2
 1166              	.L91:
 1167 001c 00000000 		.word	USBUART_deviceStatus
 1168              		.cfi_endproc
 1169              	.LFE17:
 1170              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1171              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1172              		.align	2
 1173              		.global	USBUART_RWUEnabled
 1174              		.thumb
 1175              		.thumb_func
 1176              		.type	USBUART_RWUEnabled, %function
 1177              	USBUART_RWUEnabled:
 1178              	.LFB18:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 65


2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1179              		.loc 1 2454 0
 1180              		.cfi_startproc
 1181              		@ args = 0, pretend = 0, frame = 0
 1182              		@ frame_needed = 0, uses_anonymous_args = 0
 1183              		@ link register save eliminated.
 1184              	.LVL82:
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1185              		.loc 1 2457 0
 1186 0000 044B     		ldr	r3, .L96
 1187 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188 0004 13F0020F 		tst	r3, #2
 1189 0008 01D1     		bne	.L95
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1190              		.loc 1 2455 0
 1191 000a 0020     		movs	r0, #0
 1192 000c 7047     		bx	lr
 1193              	.L95:
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1194              		.loc 1 2459 0
 1195 000e 0120     		movs	r0, #1
 1196              	.LVL83:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART.c **** }
 1197              		.loc 1 2463 0
 1198 0010 7047     		bx	lr
 1199              	.L97:
 1200 0012 00BF     		.align	2
 1201              	.L96:
 1202 0014 00000000 		.word	USBUART_deviceStatus
 1203              		.cfi_endproc
 1204              	.LFE18:
 1205              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1206              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1207              		.align	2
 1208              		.global	USBUART_GetDeviceAddress
 1209              		.thumb
 1210              		.thumb_func
 1211              		.type	USBUART_GetDeviceAddress, %function
 1212              	USBUART_GetDeviceAddress:
 1213              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 66


2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1214              		.loc 1 2478 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1219              		.loc 1 2479 0
 1220 0000 024B     		ldr	r3, .L99
 1221 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART.c **** }
 1222              		.loc 1 2480 0
 1223 0004 00F07F00 		and	r0, r0, #127
 1224 0008 7047     		bx	lr
 1225              	.L100:
 1226 000a 00BF     		.align	2
 1227              	.L99:
 1228 000c 08600040 		.word	1073766408
 1229              		.cfi_endproc
 1230              	.LFE19:
 1231              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1232              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1233              		.align	2
 1234              		.global	USBUART_EnableSofInt
 1235              		.thumb
 1236              		.thumb_func
 1237              		.type	USBUART_EnableSofInt, %function
 1238              	USBUART_EnableSofInt:
 1239              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1240              		.loc 1 2492 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 67


2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1245              		.loc 1 2499 0
 1246 0000 4FF40012 		mov	r2, #2097152
 1247 0004 014B     		ldr	r3, .L102
 1248 0006 1A60     		str	r2, [r3]
 1249 0008 7047     		bx	lr
 1250              	.L103:
 1251 000a 00BF     		.align	2
 1252              	.L102:
 1253 000c 00E100E0 		.word	-536813312
 1254              		.cfi_endproc
 1255              	.LFE20:
 1256              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1257              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1258              		.align	2
 1259              		.global	USBUART_DisableSofInt
 1260              		.thumb
 1261              		.thumb_func
 1262              		.type	USBUART_DisableSofInt, %function
 1263              	USBUART_DisableSofInt:
 1264              	.LFB21:
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1265              		.loc 1 2514 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1270              		.loc 1 2521 0
 1271 0000 4FF40012 		mov	r2, #2097152
 1272 0004 014B     		ldr	r3, .L105
 1273 0006 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 68


 1274 0008 7047     		bx	lr
 1275              	.L106:
 1276 000a 00BF     		.align	2
 1277              	.L105:
 1278 000c 80E100E0 		.word	-536813184
 1279              		.cfi_endproc
 1280              	.LFE21:
 1281              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1282              		.global	USBUART_initVar
 1283              		.bss
 1284              		.set	.LANCHOR0,. + 0
 1285              		.type	USBUART_initVar, %object
 1286              		.size	USBUART_initVar, 1
 1287              	USBUART_initVar:
 1288 0000 00       		.space	1
 1289              		.text
 1290              	.Letext0:
 1291              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1292              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1293              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1294              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1295              		.file 6 "Generated_Source\\PSoC5\\USBUART_Dp.h"
 1296              		.section	.debug_info,"",%progbits
 1297              	.Ldebug_info0:
 1298 0000 91090000 		.4byte	0x991
 1299 0004 0400     		.2byte	0x4
 1300 0006 00000000 		.4byte	.Ldebug_abbrev0
 1301 000a 04       		.byte	0x4
 1302 000b 01       		.uleb128 0x1
 1303 000c 7D050000 		.4byte	.LASF99
 1304 0010 0C       		.byte	0xc
 1305 0011 41020000 		.4byte	.LASF100
 1306 0015 E4020000 		.4byte	.LASF101
 1307 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1308 001d 00000000 		.4byte	0
 1309 0021 00000000 		.4byte	.Ldebug_line0
 1310 0025 02       		.uleb128 0x2
 1311 0026 01       		.byte	0x1
 1312 0027 06       		.byte	0x6
 1313 0028 1F030000 		.4byte	.LASF0
 1314 002c 02       		.uleb128 0x2
 1315 002d 01       		.byte	0x1
 1316 002e 08       		.byte	0x8
 1317 002f C4020000 		.4byte	.LASF1
 1318 0033 02       		.uleb128 0x2
 1319 0034 02       		.byte	0x2
 1320 0035 05       		.byte	0x5
 1321 0036 93000000 		.4byte	.LASF2
 1322 003a 02       		.uleb128 0x2
 1323 003b 02       		.byte	0x2
 1324 003c 07       		.byte	0x7
 1325 003d C0030000 		.4byte	.LASF3
 1326 0041 02       		.uleb128 0x2
 1327 0042 04       		.byte	0x4
 1328 0043 05       		.byte	0x5
 1329 0044 F8030000 		.4byte	.LASF4
 1330 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 69


 1331 0049 04       		.byte	0x4
 1332 004a 07       		.byte	0x7
 1333 004b 63040000 		.4byte	.LASF5
 1334 004f 02       		.uleb128 0x2
 1335 0050 08       		.byte	0x8
 1336 0051 05       		.byte	0x5
 1337 0052 0A020000 		.4byte	.LASF6
 1338 0056 02       		.uleb128 0x2
 1339 0057 08       		.byte	0x8
 1340 0058 07       		.byte	0x7
 1341 0059 43030000 		.4byte	.LASF7
 1342 005d 03       		.uleb128 0x3
 1343 005e 04       		.byte	0x4
 1344 005f 05       		.byte	0x5
 1345 0060 696E7400 		.ascii	"int\000"
 1346 0064 02       		.uleb128 0x2
 1347 0065 04       		.byte	0x4
 1348 0066 07       		.byte	0x7
 1349 0067 7E030000 		.4byte	.LASF8
 1350 006b 04       		.uleb128 0x4
 1351 006c 39040000 		.4byte	.LASF9
 1352 0070 02       		.byte	0x2
 1353 0071 E801     		.2byte	0x1e8
 1354 0073 2C000000 		.4byte	0x2c
 1355 0077 04       		.uleb128 0x4
 1356 0078 4D010000 		.4byte	.LASF10
 1357 007c 02       		.byte	0x2
 1358 007d E901     		.2byte	0x1e9
 1359 007f 3A000000 		.4byte	0x3a
 1360 0083 04       		.uleb128 0x4
 1361 0084 57040000 		.4byte	.LASF11
 1362 0088 02       		.byte	0x2
 1363 0089 EA01     		.2byte	0x1ea
 1364 008b 48000000 		.4byte	0x48
 1365 008f 02       		.uleb128 0x2
 1366 0090 04       		.byte	0x4
 1367 0091 04       		.byte	0x4
 1368 0092 C1010000 		.4byte	.LASF12
 1369 0096 02       		.uleb128 0x2
 1370 0097 08       		.byte	0x8
 1371 0098 04       		.byte	0x4
 1372 0099 75040000 		.4byte	.LASF13
 1373 009d 02       		.uleb128 0x2
 1374 009e 01       		.byte	0x1
 1375 009f 08       		.byte	0x8
 1376 00a0 F3030000 		.4byte	.LASF14
 1377 00a4 04       		.uleb128 0x4
 1378 00a5 5E040000 		.4byte	.LASF15
 1379 00a9 02       		.byte	0x2
 1380 00aa 9202     		.2byte	0x292
 1381 00ac B0000000 		.4byte	0xb0
 1382 00b0 05       		.uleb128 0x5
 1383 00b1 6B000000 		.4byte	0x6b
 1384 00b5 04       		.uleb128 0x4
 1385 00b6 A3030000 		.4byte	.LASF16
 1386 00ba 02       		.byte	0x2
 1387 00bb 9402     		.2byte	0x294
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 70


 1388 00bd C1000000 		.4byte	0xc1
 1389 00c1 05       		.uleb128 0x5
 1390 00c2 83000000 		.4byte	0x83
 1391 00c6 02       		.uleb128 0x2
 1392 00c7 08       		.byte	0x8
 1393 00c8 04       		.byte	0x4
 1394 00c9 D6000000 		.4byte	.LASF17
 1395 00cd 02       		.uleb128 0x2
 1396 00ce 04       		.byte	0x4
 1397 00cf 07       		.byte	0x7
 1398 00d0 9D000000 		.4byte	.LASF18
 1399 00d4 06       		.uleb128 0x6
 1400 00d5 0C       		.byte	0xc
 1401 00d6 03       		.byte	0x3
 1402 00d7 8D       		.byte	0x8d
 1403 00d8 49010000 		.4byte	0x149
 1404 00dc 07       		.uleb128 0x7
 1405 00dd DB030000 		.4byte	.LASF19
 1406 00e1 03       		.byte	0x3
 1407 00e2 8F       		.byte	0x8f
 1408 00e3 6B000000 		.4byte	0x6b
 1409 00e7 00       		.byte	0
 1410 00e8 07       		.uleb128 0x7
 1411 00e9 B1040000 		.4byte	.LASF20
 1412 00ed 03       		.byte	0x3
 1413 00ee 90       		.byte	0x90
 1414 00ef 6B000000 		.4byte	0x6b
 1415 00f3 01       		.byte	0x1
 1416 00f4 07       		.uleb128 0x7
 1417 00f5 4D040000 		.4byte	.LASF21
 1418 00f9 03       		.byte	0x3
 1419 00fa 91       		.byte	0x91
 1420 00fb 6B000000 		.4byte	0x6b
 1421 00ff 02       		.byte	0x2
 1422 0100 07       		.uleb128 0x7
 1423 0101 00000000 		.4byte	.LASF22
 1424 0105 03       		.byte	0x3
 1425 0106 92       		.byte	0x92
 1426 0107 6B000000 		.4byte	0x6b
 1427 010b 03       		.byte	0x3
 1428 010c 07       		.uleb128 0x7
 1429 010d 2D040000 		.4byte	.LASF23
 1430 0111 03       		.byte	0x3
 1431 0112 93       		.byte	0x93
 1432 0113 6B000000 		.4byte	0x6b
 1433 0117 04       		.byte	0x4
 1434 0118 07       		.uleb128 0x7
 1435 0119 BD000000 		.4byte	.LASF24
 1436 011d 03       		.byte	0x3
 1437 011e 94       		.byte	0x94
 1438 011f 6B000000 		.4byte	0x6b
 1439 0123 05       		.byte	0x5
 1440 0124 07       		.uleb128 0x7
 1441 0125 AF020000 		.4byte	.LASF25
 1442 0129 03       		.byte	0x3
 1443 012a 95       		.byte	0x95
 1444 012b 77000000 		.4byte	0x77
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 71


 1445 012f 06       		.byte	0x6
 1446 0130 07       		.uleb128 0x7
 1447 0131 D6040000 		.4byte	.LASF26
 1448 0135 03       		.byte	0x3
 1449 0136 96       		.byte	0x96
 1450 0137 77000000 		.4byte	0x77
 1451 013b 08       		.byte	0x8
 1452 013c 07       		.uleb128 0x7
 1453 013d 14060000 		.4byte	.LASF27
 1454 0141 03       		.byte	0x3
 1455 0142 97       		.byte	0x97
 1456 0143 6B000000 		.4byte	0x6b
 1457 0147 0A       		.byte	0xa
 1458 0148 00       		.byte	0
 1459 0149 08       		.uleb128 0x8
 1460 014a F7040000 		.4byte	.LASF28
 1461 014e 03       		.byte	0x3
 1462 014f 98       		.byte	0x98
 1463 0150 D4000000 		.4byte	0xd4
 1464 0154 06       		.uleb128 0x6
 1465 0155 10       		.byte	0x10
 1466 0156 03       		.byte	0x3
 1467 0157 D4       		.byte	0xd4
 1468 0158 8D010000 		.4byte	0x18d
 1469 015c 07       		.uleb128 0x7
 1470 015d 32040000 		.4byte	.LASF29
 1471 0161 03       		.byte	0x3
 1472 0162 D6       		.byte	0xd6
 1473 0163 6B000000 		.4byte	0x6b
 1474 0167 00       		.byte	0
 1475 0168 07       		.uleb128 0x7
 1476 0169 46040000 		.4byte	.LASF30
 1477 016d 03       		.byte	0x3
 1478 016e D7       		.byte	0xd7
 1479 016f 6B000000 		.4byte	0x6b
 1480 0173 01       		.byte	0x1
 1481 0174 07       		.uleb128 0x7
 1482 0175 35020000 		.4byte	.LASF31
 1483 0179 03       		.byte	0x3
 1484 017a D8       		.byte	0xd8
 1485 017b 6B000000 		.4byte	0x6b
 1486 017f 02       		.byte	0x2
 1487 0180 09       		.uleb128 0x9
 1488 0181 67617000 		.ascii	"gap\000"
 1489 0185 03       		.byte	0x3
 1490 0186 D9       		.byte	0xd9
 1491 0187 8D010000 		.4byte	0x18d
 1492 018b 03       		.byte	0x3
 1493 018c 00       		.byte	0
 1494 018d 0A       		.uleb128 0xa
 1495 018e 6B000000 		.4byte	0x6b
 1496 0192 9D010000 		.4byte	0x19d
 1497 0196 0B       		.uleb128 0xb
 1498 0197 CD000000 		.4byte	0xcd
 1499 019b 0C       		.byte	0xc
 1500 019c 00       		.byte	0
 1501 019d 08       		.uleb128 0x8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 72


 1502 019e 70010000 		.4byte	.LASF32
 1503 01a2 03       		.byte	0x3
 1504 01a3 DA       		.byte	0xda
 1505 01a4 54010000 		.4byte	0x154
 1506 01a8 06       		.uleb128 0x6
 1507 01a9 10       		.byte	0x10
 1508 01aa 03       		.byte	0x3
 1509 01ab E6       		.byte	0xe6
 1510 01ac 29020000 		.4byte	0x229
 1511 01b0 07       		.uleb128 0x7
 1512 01b1 3B020000 		.4byte	.LASF33
 1513 01b5 03       		.byte	0x3
 1514 01b6 E8       		.byte	0xe8
 1515 01b7 6B000000 		.4byte	0x6b
 1516 01bb 00       		.byte	0
 1517 01bc 07       		.uleb128 0x7
 1518 01bd 8B000000 		.4byte	.LASF34
 1519 01c1 03       		.byte	0x3
 1520 01c2 E9       		.byte	0xe9
 1521 01c3 6B000000 		.4byte	0x6b
 1522 01c7 01       		.byte	0x1
 1523 01c8 07       		.uleb128 0x7
 1524 01c9 D2020000 		.4byte	.LASF35
 1525 01cd 03       		.byte	0x3
 1526 01ce EA       		.byte	0xea
 1527 01cf 6B000000 		.4byte	0x6b
 1528 01d3 02       		.byte	0x2
 1529 01d4 07       		.uleb128 0x7
 1530 01d5 0B060000 		.4byte	.LASF36
 1531 01d9 03       		.byte	0x3
 1532 01da EB       		.byte	0xeb
 1533 01db 6B000000 		.4byte	0x6b
 1534 01df 03       		.byte	0x3
 1535 01e0 07       		.uleb128 0x7
 1536 01e1 90030000 		.4byte	.LASF37
 1537 01e5 03       		.byte	0x3
 1538 01e6 EC       		.byte	0xec
 1539 01e7 6B000000 		.4byte	0x6b
 1540 01eb 04       		.byte	0x4
 1541 01ec 07       		.uleb128 0x7
 1542 01ed 75050000 		.4byte	.LASF38
 1543 01f1 03       		.byte	0x3
 1544 01f2 ED       		.byte	0xed
 1545 01f3 6B000000 		.4byte	0x6b
 1546 01f7 05       		.byte	0x5
 1547 01f8 07       		.uleb128 0x7
 1548 01f9 54010000 		.4byte	.LASF39
 1549 01fd 03       		.byte	0x3
 1550 01fe EE       		.byte	0xee
 1551 01ff 6B000000 		.4byte	0x6b
 1552 0203 06       		.byte	0x6
 1553 0204 07       		.uleb128 0x7
 1554 0205 D3030000 		.4byte	.LASF40
 1555 0209 03       		.byte	0x3
 1556 020a EF       		.byte	0xef
 1557 020b 6B000000 		.4byte	0x6b
 1558 020f 07       		.byte	0x7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 73


 1559 0210 07       		.uleb128 0x7
 1560 0211 8B030000 		.4byte	.LASF41
 1561 0215 03       		.byte	0x3
 1562 0216 F0       		.byte	0xf0
 1563 0217 6B000000 		.4byte	0x6b
 1564 021b 08       		.byte	0x8
 1565 021c 09       		.uleb128 0x9
 1566 021d 67617000 		.ascii	"gap\000"
 1567 0221 03       		.byte	0x3
 1568 0222 F1       		.byte	0xf1
 1569 0223 29020000 		.4byte	0x229
 1570 0227 09       		.byte	0x9
 1571 0228 00       		.byte	0
 1572 0229 0A       		.uleb128 0xa
 1573 022a 6B000000 		.4byte	0x6b
 1574 022e 39020000 		.4byte	0x239
 1575 0232 0B       		.uleb128 0xb
 1576 0233 CD000000 		.4byte	0xcd
 1577 0237 06       		.byte	0x6
 1578 0238 00       		.byte	0
 1579 0239 08       		.uleb128 0x8
 1580 023a 68030000 		.4byte	.LASF42
 1581 023e 03       		.byte	0x3
 1582 023f F2       		.byte	0xf2
 1583 0240 A8010000 		.4byte	0x1a8
 1584 0244 0C       		.uleb128 0xc
 1585 0245 90       		.byte	0x90
 1586 0246 03       		.byte	0x3
 1587 0247 0E01     		.2byte	0x10e
 1588 0249 5B020000 		.4byte	0x25b
 1589 024d 0D       		.uleb128 0xd
 1590 024e 97010000 		.4byte	.LASF43
 1591 0252 03       		.byte	0x3
 1592 0253 1001     		.2byte	0x110
 1593 0255 5B020000 		.4byte	0x25b
 1594 0259 00       		.byte	0
 1595 025a 00       		.byte	0
 1596 025b 0A       		.uleb128 0xa
 1597 025c 9D010000 		.4byte	0x19d
 1598 0260 6B020000 		.4byte	0x26b
 1599 0264 0B       		.uleb128 0xb
 1600 0265 CD000000 		.4byte	0xcd
 1601 0269 08       		.byte	0x8
 1602 026a 00       		.byte	0
 1603 026b 04       		.uleb128 0x4
 1604 026c FA000000 		.4byte	.LASF44
 1605 0270 03       		.byte	0x3
 1606 0271 1101     		.2byte	0x111
 1607 0273 44020000 		.4byte	0x244
 1608 0277 0C       		.uleb128 0xc
 1609 0278 90       		.byte	0x90
 1610 0279 03       		.byte	0x3
 1611 027a 1401     		.2byte	0x114
 1612 027c 8E020000 		.4byte	0x28e
 1613 0280 0D       		.uleb128 0xd
 1614 0281 C4000000 		.4byte	.LASF45
 1615 0285 03       		.byte	0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 74


 1616 0286 1601     		.2byte	0x116
 1617 0288 8E020000 		.4byte	0x28e
 1618 028c 00       		.byte	0
 1619 028d 00       		.byte	0
 1620 028e 0A       		.uleb128 0xa
 1621 028f 39020000 		.4byte	0x239
 1622 0293 9E020000 		.4byte	0x29e
 1623 0297 0B       		.uleb128 0xb
 1624 0298 CD000000 		.4byte	0xcd
 1625 029c 08       		.byte	0x8
 1626 029d 00       		.byte	0
 1627 029e 04       		.uleb128 0x4
 1628 029f A6000000 		.4byte	.LASF46
 1629 02a3 03       		.byte	0x3
 1630 02a4 1701     		.2byte	0x117
 1631 02a6 77020000 		.4byte	0x277
 1632 02aa 0E       		.uleb128 0xe
 1633 02ab D7020000 		.4byte	.LASF47
 1634 02af 01       		.byte	0x1
 1635 02b0 D3       		.byte	0xd3
 1636 02b1 00000000 		.4byte	.LFB1
 1637 02b5 40010000 		.4byte	.LFE1-.LFB1
 1638 02b9 01       		.uleb128 0x1
 1639 02ba 9C       		.byte	0x9c
 1640 02bb 6A040000 		.4byte	0x46a
 1641 02bf 0F       		.uleb128 0xf
 1642 02c0 25060000 		.4byte	.LASF53
 1643 02c4 01       		.byte	0x1
 1644 02c5 FA       		.byte	0xfa
 1645 02c6 6B000000 		.4byte	0x6b
 1646 02ca 00000000 		.4byte	.LLST0
 1647 02ce 10       		.uleb128 0x10
 1648 02cf 06000000 		.4byte	.LVL0
 1649 02d3 47090000 		.4byte	0x947
 1650 02d7 11       		.uleb128 0x11
 1651 02d8 3C000000 		.4byte	.LVL2
 1652 02dc 52090000 		.4byte	0x952
 1653 02e0 EA020000 		.4byte	0x2ea
 1654 02e4 12       		.uleb128 0x12
 1655 02e5 01       		.uleb128 0x1
 1656 02e6 50       		.byte	0x50
 1657 02e7 01       		.uleb128 0x1
 1658 02e8 30       		.byte	0x30
 1659 02e9 00       		.byte	0
 1660 02ea 11       		.uleb128 0x11
 1661 02eb 5C000000 		.4byte	.LVL3
 1662 02ef 52090000 		.4byte	0x952
 1663 02f3 FE020000 		.4byte	0x2fe
 1664 02f7 12       		.uleb128 0x12
 1665 02f8 01       		.uleb128 0x1
 1666 02f9 50       		.byte	0x50
 1667 02fa 02       		.uleb128 0x2
 1668 02fb 76       		.byte	0x76
 1669 02fc 00       		.sleb128 0
 1670 02fd 00       		.byte	0
 1671 02fe 11       		.uleb128 0x11
 1672 02ff 62000000 		.4byte	.LVL4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 75


 1673 0303 52090000 		.4byte	0x952
 1674 0307 12030000 		.4byte	0x312
 1675 030b 12       		.uleb128 0x12
 1676 030c 01       		.uleb128 0x1
 1677 030d 50       		.byte	0x50
 1678 030e 02       		.uleb128 0x2
 1679 030f 08       		.byte	0x8
 1680 0310 28       		.byte	0x28
 1681 0311 00       		.byte	0
 1682 0312 11       		.uleb128 0x11
 1683 0313 80000000 		.4byte	.LVL5
 1684 0317 52090000 		.4byte	0x952
 1685 031b 26030000 		.4byte	0x326
 1686 031f 12       		.uleb128 0x12
 1687 0320 01       		.uleb128 0x1
 1688 0321 50       		.byte	0x50
 1689 0322 02       		.uleb128 0x2
 1690 0323 75       		.byte	0x75
 1691 0324 00       		.sleb128 0
 1692 0325 00       		.byte	0
 1693 0326 11       		.uleb128 0x11
 1694 0327 98000000 		.4byte	.LVL6
 1695 032b 5D090000 		.4byte	0x95d
 1696 032f 3A030000 		.4byte	0x33a
 1697 0333 12       		.uleb128 0x12
 1698 0334 01       		.uleb128 0x1
 1699 0335 50       		.byte	0x50
 1700 0336 02       		.uleb128 0x2
 1701 0337 77       		.byte	0x77
 1702 0338 00       		.sleb128 0
 1703 0339 00       		.byte	0
 1704 033a 11       		.uleb128 0x11
 1705 033b A0000000 		.4byte	.LVL7
 1706 033f 68090000 		.4byte	0x968
 1707 0343 52030000 		.4byte	0x352
 1708 0347 12       		.uleb128 0x12
 1709 0348 01       		.uleb128 0x1
 1710 0349 50       		.byte	0x50
 1711 034a 01       		.uleb128 0x1
 1712 034b 47       		.byte	0x47
 1713 034c 12       		.uleb128 0x12
 1714 034d 01       		.uleb128 0x1
 1715 034e 51       		.byte	0x51
 1716 034f 01       		.uleb128 0x1
 1717 0350 37       		.byte	0x37
 1718 0351 00       		.byte	0
 1719 0352 11       		.uleb128 0x11
 1720 0353 A8000000 		.4byte	.LVL8
 1721 0357 73090000 		.4byte	0x973
 1722 035b 65030000 		.4byte	0x365
 1723 035f 12       		.uleb128 0x12
 1724 0360 01       		.uleb128 0x1
 1725 0361 50       		.byte	0x50
 1726 0362 01       		.uleb128 0x1
 1727 0363 47       		.byte	0x47
 1728 0364 00       		.byte	0
 1729 0365 11       		.uleb128 0x11
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 76


 1730 0366 B0000000 		.4byte	.LVL9
 1731 036a 68090000 		.4byte	0x968
 1732 036e 7D030000 		.4byte	0x37d
 1733 0372 12       		.uleb128 0x12
 1734 0373 01       		.uleb128 0x1
 1735 0374 50       		.byte	0x50
 1736 0375 01       		.uleb128 0x1
 1737 0376 48       		.byte	0x48
 1738 0377 12       		.uleb128 0x12
 1739 0378 01       		.uleb128 0x1
 1740 0379 51       		.byte	0x51
 1741 037a 01       		.uleb128 0x1
 1742 037b 37       		.byte	0x37
 1743 037c 00       		.byte	0
 1744 037d 11       		.uleb128 0x11
 1745 037e B8000000 		.4byte	.LVL10
 1746 0382 73090000 		.4byte	0x973
 1747 0386 90030000 		.4byte	0x390
 1748 038a 12       		.uleb128 0x12
 1749 038b 01       		.uleb128 0x1
 1750 038c 50       		.byte	0x50
 1751 038d 01       		.uleb128 0x1
 1752 038e 48       		.byte	0x48
 1753 038f 00       		.byte	0
 1754 0390 11       		.uleb128 0x11
 1755 0391 C0000000 		.4byte	.LVL11
 1756 0395 68090000 		.4byte	0x968
 1757 0399 A8030000 		.4byte	0x3a8
 1758 039d 12       		.uleb128 0x12
 1759 039e 01       		.uleb128 0x1
 1760 039f 50       		.byte	0x50
 1761 03a0 01       		.uleb128 0x1
 1762 03a1 45       		.byte	0x45
 1763 03a2 12       		.uleb128 0x12
 1764 03a3 01       		.uleb128 0x1
 1765 03a4 51       		.byte	0x51
 1766 03a5 01       		.uleb128 0x1
 1767 03a6 37       		.byte	0x37
 1768 03a7 00       		.byte	0
 1769 03a8 11       		.uleb128 0x11
 1770 03a9 C8000000 		.4byte	.LVL12
 1771 03ad 73090000 		.4byte	0x973
 1772 03b1 BB030000 		.4byte	0x3bb
 1773 03b5 12       		.uleb128 0x12
 1774 03b6 01       		.uleb128 0x1
 1775 03b7 50       		.byte	0x50
 1776 03b8 01       		.uleb128 0x1
 1777 03b9 45       		.byte	0x45
 1778 03ba 00       		.byte	0
 1779 03bb 11       		.uleb128 0x11
 1780 03bc D0000000 		.4byte	.LVL13
 1781 03c0 68090000 		.4byte	0x968
 1782 03c4 D4030000 		.4byte	0x3d4
 1783 03c8 12       		.uleb128 0x12
 1784 03c9 01       		.uleb128 0x1
 1785 03ca 50       		.byte	0x50
 1786 03cb 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 77


 1787 03cc 74       		.byte	0x74
 1788 03cd 00       		.sleb128 0
 1789 03ce 12       		.uleb128 0x12
 1790 03cf 01       		.uleb128 0x1
 1791 03d0 51       		.byte	0x51
 1792 03d1 01       		.uleb128 0x1
 1793 03d2 37       		.byte	0x37
 1794 03d3 00       		.byte	0
 1795 03d4 11       		.uleb128 0x11
 1796 03d5 D8000000 		.4byte	.LVL14
 1797 03d9 73090000 		.4byte	0x973
 1798 03dd E8030000 		.4byte	0x3e8
 1799 03e1 12       		.uleb128 0x12
 1800 03e2 01       		.uleb128 0x1
 1801 03e3 50       		.byte	0x50
 1802 03e4 02       		.uleb128 0x2
 1803 03e5 74       		.byte	0x74
 1804 03e6 00       		.sleb128 0
 1805 03e7 00       		.byte	0
 1806 03e8 11       		.uleb128 0x11
 1807 03e9 E0000000 		.4byte	.LVL15
 1808 03ed 68090000 		.4byte	0x968
 1809 03f1 01040000 		.4byte	0x401
 1810 03f5 12       		.uleb128 0x12
 1811 03f6 01       		.uleb128 0x1
 1812 03f7 50       		.byte	0x50
 1813 03f8 02       		.uleb128 0x2
 1814 03f9 76       		.byte	0x76
 1815 03fa 00       		.sleb128 0
 1816 03fb 12       		.uleb128 0x12
 1817 03fc 01       		.uleb128 0x1
 1818 03fd 51       		.byte	0x51
 1819 03fe 01       		.uleb128 0x1
 1820 03ff 37       		.byte	0x37
 1821 0400 00       		.byte	0
 1822 0401 11       		.uleb128 0x11
 1823 0402 E8000000 		.4byte	.LVL16
 1824 0406 73090000 		.4byte	0x973
 1825 040a 15040000 		.4byte	0x415
 1826 040e 12       		.uleb128 0x12
 1827 040f 01       		.uleb128 0x1
 1828 0410 50       		.byte	0x50
 1829 0411 02       		.uleb128 0x2
 1830 0412 76       		.byte	0x76
 1831 0413 00       		.sleb128 0
 1832 0414 00       		.byte	0
 1833 0415 11       		.uleb128 0x11
 1834 0416 F0000000 		.4byte	.LVL17
 1835 041a 68090000 		.4byte	0x968
 1836 041e 2E040000 		.4byte	0x42e
 1837 0422 12       		.uleb128 0x12
 1838 0423 01       		.uleb128 0x1
 1839 0424 50       		.byte	0x50
 1840 0425 02       		.uleb128 0x2
 1841 0426 75       		.byte	0x75
 1842 0427 00       		.sleb128 0
 1843 0428 12       		.uleb128 0x12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 78


 1844 0429 01       		.uleb128 0x1
 1845 042a 51       		.byte	0x51
 1846 042b 01       		.uleb128 0x1
 1847 042c 37       		.byte	0x37
 1848 042d 00       		.byte	0
 1849 042e 11       		.uleb128 0x11
 1850 042f F8000000 		.4byte	.LVL18
 1851 0433 73090000 		.4byte	0x973
 1852 0437 42040000 		.4byte	0x442
 1853 043b 12       		.uleb128 0x12
 1854 043c 01       		.uleb128 0x1
 1855 043d 50       		.byte	0x50
 1856 043e 02       		.uleb128 0x2
 1857 043f 75       		.byte	0x75
 1858 0440 00       		.sleb128 0
 1859 0441 00       		.byte	0
 1860 0442 11       		.uleb128 0x11
 1861 0443 00010000 		.4byte	.LVL19
 1862 0447 68090000 		.4byte	0x968
 1863 044b 5A040000 		.4byte	0x45a
 1864 044f 12       		.uleb128 0x12
 1865 0450 01       		.uleb128 0x1
 1866 0451 50       		.byte	0x50
 1867 0452 01       		.uleb128 0x1
 1868 0453 3C       		.byte	0x3c
 1869 0454 12       		.uleb128 0x12
 1870 0455 01       		.uleb128 0x1
 1871 0456 51       		.byte	0x51
 1872 0457 01       		.uleb128 0x1
 1873 0458 37       		.byte	0x37
 1874 0459 00       		.byte	0
 1875 045a 13       		.uleb128 0x13
 1876 045b 08010000 		.4byte	.LVL20
 1877 045f 73090000 		.4byte	0x973
 1878 0463 12       		.uleb128 0x12
 1879 0464 01       		.uleb128 0x1
 1880 0465 50       		.byte	0x50
 1881 0466 01       		.uleb128 0x1
 1882 0467 3C       		.byte	0x3c
 1883 0468 00       		.byte	0
 1884 0469 00       		.byte	0
 1885 046a 14       		.uleb128 0x14
 1886 046b E1040000 		.4byte	.LASF48
 1887 046f 01       		.byte	0x1
 1888 0470 CC01     		.2byte	0x1cc
 1889 0472 00000000 		.4byte	.LFB2
 1890 0476 B8000000 		.4byte	.LFE2-.LFB2
 1891 047a 01       		.uleb128 0x1
 1892 047b 9C       		.byte	0x9c
 1893 047c B0040000 		.4byte	0x4b0
 1894 0480 15       		.uleb128 0x15
 1895 0481 BA010000 		.4byte	.LASF49
 1896 0485 01       		.byte	0x1
 1897 0486 CC01     		.2byte	0x1cc
 1898 0488 6B000000 		.4byte	0x6b
 1899 048c 13000000 		.4byte	.LLST1
 1900 0490 15       		.uleb128 0x15
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 79


 1901 0491 F5000000 		.4byte	.LASF50
 1902 0495 01       		.byte	0x1
 1903 0496 CC01     		.2byte	0x1cc
 1904 0498 6B000000 		.4byte	0x6b
 1905 049c 34000000 		.4byte	.LLST2
 1906 04a0 13       		.uleb128 0x13
 1907 04a1 80000000 		.4byte	.LVL24
 1908 04a5 7E090000 		.4byte	0x97e
 1909 04a9 12       		.uleb128 0x12
 1910 04aa 01       		.uleb128 0x1
 1911 04ab 50       		.byte	0x50
 1912 04ac 01       		.uleb128 0x1
 1913 04ad 31       		.byte	0x31
 1914 04ae 00       		.byte	0
 1915 04af 00       		.byte	0
 1916 04b0 0E       		.uleb128 0xe
 1917 04b1 26010000 		.4byte	.LASF51
 1918 04b5 01       		.byte	0x1
 1919 04b6 BA       		.byte	0xba
 1920 04b7 00000000 		.4byte	.LFB0
 1921 04bb 24000000 		.4byte	.LFE0-.LFB0
 1922 04bf 01       		.uleb128 0x1
 1923 04c0 9C       		.byte	0x9c
 1924 04c1 03050000 		.4byte	0x503
 1925 04c5 16       		.uleb128 0x16
 1926 04c6 BA010000 		.4byte	.LASF49
 1927 04ca 01       		.byte	0x1
 1928 04cb BA       		.byte	0xba
 1929 04cc 6B000000 		.4byte	0x6b
 1930 04d0 55000000 		.4byte	.LLST3
 1931 04d4 16       		.uleb128 0x16
 1932 04d5 F5000000 		.4byte	.LASF50
 1933 04d9 01       		.byte	0x1
 1934 04da BA       		.byte	0xba
 1935 04db 6B000000 		.4byte	0x6b
 1936 04df 76000000 		.4byte	.LLST4
 1937 04e3 10       		.uleb128 0x10
 1938 04e4 10000000 		.4byte	.LVL26
 1939 04e8 AA020000 		.4byte	0x2aa
 1940 04ec 13       		.uleb128 0x13
 1941 04ed 1E000000 		.4byte	.LVL27
 1942 04f1 6A040000 		.4byte	0x46a
 1943 04f5 12       		.uleb128 0x12
 1944 04f6 01       		.uleb128 0x1
 1945 04f7 50       		.byte	0x50
 1946 04f8 02       		.uleb128 0x2
 1947 04f9 74       		.byte	0x74
 1948 04fa 00       		.sleb128 0
 1949 04fb 12       		.uleb128 0x12
 1950 04fc 01       		.uleb128 0x1
 1951 04fd 51       		.byte	0x51
 1952 04fe 02       		.uleb128 0x2
 1953 04ff 75       		.byte	0x75
 1954 0500 00       		.sleb128 0
 1955 0501 00       		.byte	0
 1956 0502 00       		.byte	0
 1957 0503 17       		.uleb128 0x17
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 80


 1958 0504 2B030000 		.4byte	.LASF78
 1959 0508 01       		.byte	0x1
 1960 0509 9F02     		.2byte	0x29f
 1961 050b 00000000 		.4byte	.LFB3
 1962 050f 4C000000 		.4byte	.LFE3-.LFB3
 1963 0513 01       		.uleb128 0x1
 1964 0514 9C       		.byte	0x9c
 1965 0515 14       		.uleb128 0x14
 1966 0516 56060000 		.4byte	.LASF52
 1967 051a 01       		.byte	0x1
 1968 051b D902     		.2byte	0x2d9
 1969 051d 00000000 		.4byte	.LFB4
 1970 0521 B8000000 		.4byte	.LFE4-.LFB4
 1971 0525 01       		.uleb128 0x1
 1972 0526 9C       		.byte	0x9c
 1973 0527 57050000 		.4byte	0x557
 1974 052b 18       		.uleb128 0x18
 1975 052c 25060000 		.4byte	.LASF53
 1976 0530 01       		.byte	0x1
 1977 0531 DB02     		.2byte	0x2db
 1978 0533 6B000000 		.4byte	0x6b
 1979 0537 97000000 		.4byte	.LLST5
 1980 053b 10       		.uleb128 0x10
 1981 053c 06000000 		.4byte	.LVL28
 1982 0540 47090000 		.4byte	0x947
 1983 0544 10       		.uleb128 0x10
 1984 0545 48000000 		.4byte	.LVL29
 1985 0549 5D090000 		.4byte	0x95d
 1986 054d 10       		.uleb128 0x10
 1987 054e 6C000000 		.4byte	.LVL30
 1988 0552 89090000 		.4byte	0x989
 1989 0556 00       		.byte	0
 1990 0557 19       		.uleb128 0x19
 1991 0558 1D050000 		.4byte	.LASF55
 1992 055c 01       		.byte	0x1
 1993 055d 5103     		.2byte	0x351
 1994 055f 6B000000 		.4byte	0x6b
 1995 0563 00000000 		.4byte	.LFB5
 1996 0567 20000000 		.4byte	.LFE5-.LFB5
 1997 056b 01       		.uleb128 0x1
 1998 056c 9C       		.byte	0x9c
 1999 056d 82050000 		.4byte	0x582
 2000 0571 18       		.uleb128 0x18
 2001 0572 3F040000 		.4byte	.LASF54
 2002 0576 01       		.byte	0x1
 2003 0577 5303     		.2byte	0x353
 2004 0579 6B000000 		.4byte	0x6b
 2005 057d AA000000 		.4byte	.LLST6
 2006 0581 00       		.byte	0
 2007 0582 1A       		.uleb128 0x1a
 2008 0583 C7010000 		.4byte	.LASF76
 2009 0587 01       		.byte	0x1
 2010 0588 6803     		.2byte	0x368
 2011 058a 6B000000 		.4byte	0x6b
 2012 058e 00000000 		.4byte	.LFB6
 2013 0592 0C000000 		.4byte	.LFE6-.LFB6
 2014 0596 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 81


 2015 0597 9C       		.byte	0x9c
 2016 0598 19       		.uleb128 0x19
 2017 0599 25000000 		.4byte	.LASF56
 2018 059d 01       		.byte	0x1
 2019 059e 8203     		.2byte	0x382
 2020 05a0 6B000000 		.4byte	0x6b
 2021 05a4 00000000 		.4byte	.LFB7
 2022 05a8 20000000 		.4byte	.LFE7-.LFB7
 2023 05ac 01       		.uleb128 0x1
 2024 05ad 9C       		.byte	0x9c
 2025 05ae C3050000 		.4byte	0x5c3
 2026 05b2 1B       		.uleb128 0x1b
 2027 05b3 72657300 		.ascii	"res\000"
 2028 05b7 01       		.byte	0x1
 2029 05b8 8403     		.2byte	0x384
 2030 05ba 6B000000 		.4byte	0x6b
 2031 05be BD000000 		.4byte	.LLST7
 2032 05c2 00       		.byte	0
 2033 05c3 19       		.uleb128 0x19
 2034 05c4 95040000 		.4byte	.LASF57
 2035 05c8 01       		.byte	0x1
 2036 05c9 9F03     		.2byte	0x39f
 2037 05cb 6B000000 		.4byte	0x6b
 2038 05cf 00000000 		.4byte	.LFB8
 2039 05d3 0C000000 		.4byte	.LFE8-.LFB8
 2040 05d7 01       		.uleb128 0x1
 2041 05d8 9C       		.byte	0x9c
 2042 05d9 EE050000 		.4byte	0x5ee
 2043 05dd 15       		.uleb128 0x15
 2044 05de 09000000 		.4byte	.LASF58
 2045 05e2 01       		.byte	0x1
 2046 05e3 9F03     		.2byte	0x39f
 2047 05e5 6B000000 		.4byte	0x6b
 2048 05e9 F3000000 		.4byte	.LLST8
 2049 05ed 00       		.byte	0
 2050 05ee 19       		.uleb128 0x19
 2051 05ef 01040000 		.4byte	.LASF59
 2052 05f3 01       		.byte	0x1
 2053 05f4 BF03     		.2byte	0x3bf
 2054 05f6 6B000000 		.4byte	0x6b
 2055 05fa 00000000 		.4byte	.LFB9
 2056 05fe 14000000 		.4byte	.LFE9-.LFB9
 2057 0602 01       		.uleb128 0x1
 2058 0603 9C       		.byte	0x9c
 2059 0604 19060000 		.4byte	0x619
 2060 0608 15       		.uleb128 0x15
 2061 0609 14040000 		.4byte	.LASF60
 2062 060d 01       		.byte	0x1
 2063 060e BF03     		.2byte	0x3bf
 2064 0610 6B000000 		.4byte	0x6b
 2065 0614 14010000 		.4byte	.LLST9
 2066 0618 00       		.byte	0
 2067 0619 19       		.uleb128 0x19
 2068 061a 33050000 		.4byte	.LASF61
 2069 061e 01       		.byte	0x1
 2070 061f D603     		.2byte	0x3d6
 2071 0621 77000000 		.4byte	0x77
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 82


 2072 0625 00000000 		.4byte	.LFB10
 2073 0629 28000000 		.4byte	.LFE10-.LFB10
 2074 062d 01       		.uleb128 0x1
 2075 062e 9C       		.byte	0x9c
 2076 062f 54060000 		.4byte	0x654
 2077 0633 15       		.uleb128 0x15
 2078 0634 14040000 		.4byte	.LASF60
 2079 0638 01       		.byte	0x1
 2080 0639 D603     		.2byte	0x3d6
 2081 063b 6B000000 		.4byte	0x6b
 2082 063f 35010000 		.4byte	.LLST10
 2083 0643 18       		.uleb128 0x18
 2084 0644 20000000 		.4byte	.LASF62
 2085 0648 01       		.byte	0x1
 2086 0649 D803     		.2byte	0x3d8
 2087 064b 77000000 		.4byte	0x77
 2088 064f 6F010000 		.4byte	.LLST11
 2089 0653 00       		.byte	0
 2090 0654 14       		.uleb128 0x14
 2091 0655 E2030000 		.4byte	.LASF63
 2092 0659 01       		.byte	0x1
 2093 065a 3E05     		.2byte	0x53e
 2094 065c 00000000 		.4byte	.LFB11
 2095 0660 94000000 		.4byte	.LFE11-.LFB11
 2096 0664 01       		.uleb128 0x1
 2097 0665 9C       		.byte	0x9c
 2098 0666 AD060000 		.4byte	0x6ad
 2099 066a 15       		.uleb128 0x15
 2100 066b 14040000 		.4byte	.LASF60
 2101 066f 01       		.byte	0x1
 2102 0670 3E05     		.2byte	0x53e
 2103 0672 6B000000 		.4byte	0x6b
 2104 0676 BD010000 		.4byte	.LLST12
 2105 067a 1C       		.uleb128 0x1c
 2106 067b 85000000 		.4byte	.LASF64
 2107 067f 01       		.byte	0x1
 2108 0680 3E05     		.2byte	0x53e
 2109 0682 AD060000 		.4byte	0x6ad
 2110 0686 01       		.uleb128 0x1
 2111 0687 51       		.byte	0x51
 2112 0688 15       		.uleb128 0x15
 2113 0689 B3010000 		.4byte	.LASF65
 2114 068d 01       		.byte	0x1
 2115 068e 3E05     		.2byte	0x53e
 2116 0690 77000000 		.4byte	0x77
 2117 0694 DE010000 		.4byte	.LLST13
 2118 0698 1D       		.uleb128 0x1d
 2119 0699 00000000 		.4byte	.Ldebug_ranges0+0
 2120 069d 1B       		.uleb128 0x1b
 2121 069e 6900     		.ascii	"i\000"
 2122 06a0 01       		.byte	0x1
 2123 06a1 5305     		.2byte	0x553
 2124 06a3 77000000 		.4byte	0x77
 2125 06a7 0A020000 		.4byte	.LLST14
 2126 06ab 00       		.byte	0
 2127 06ac 00       		.byte	0
 2128 06ad 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 83


 2129 06ae 04       		.byte	0x4
 2130 06af B3060000 		.4byte	0x6b3
 2131 06b3 1F       		.uleb128 0x1f
 2132 06b4 6B000000 		.4byte	0x6b
 2133 06b8 14       		.uleb128 0x14
 2134 06b9 E0010000 		.4byte	.LASF66
 2135 06bd 01       		.byte	0x1
 2136 06be E408     		.2byte	0x8e4
 2137 06c0 00000000 		.4byte	.LFB13
 2138 06c4 2C000000 		.4byte	.LFE13-.LFB13
 2139 06c8 01       		.uleb128 0x1
 2140 06c9 9C       		.byte	0x9c
 2141 06ca DF060000 		.4byte	0x6df
 2142 06ce 15       		.uleb128 0x15
 2143 06cf 14040000 		.4byte	.LASF60
 2144 06d3 01       		.byte	0x1
 2145 06d4 E408     		.2byte	0x8e4
 2146 06d6 6B000000 		.4byte	0x6b
 2147 06da 33020000 		.4byte	.LLST15
 2148 06de 00       		.byte	0
 2149 06df 19       		.uleb128 0x19
 2150 06e0 71020000 		.4byte	.LASF67
 2151 06e4 01       		.byte	0x1
 2152 06e5 7506     		.2byte	0x675
 2153 06e7 77000000 		.4byte	0x77
 2154 06eb 00000000 		.4byte	.LFB12
 2155 06ef 50000000 		.4byte	.LFE12-.LFB12
 2156 06f3 01       		.uleb128 0x1
 2157 06f4 9C       		.byte	0x9c
 2158 06f5 7E070000 		.4byte	0x77e
 2159 06f9 15       		.uleb128 0x15
 2160 06fa 14040000 		.4byte	.LASF60
 2161 06fe 01       		.byte	0x1
 2162 06ff 7506     		.2byte	0x675
 2163 0701 6B000000 		.4byte	0x6b
 2164 0705 54020000 		.4byte	.LLST16
 2165 0709 15       		.uleb128 0x15
 2166 070a 85000000 		.4byte	.LASF64
 2167 070e 01       		.byte	0x1
 2168 070f 7506     		.2byte	0x675
 2169 0711 7E070000 		.4byte	0x77e
 2170 0715 8E020000 		.4byte	.LLST17
 2171 0719 15       		.uleb128 0x15
 2172 071a B3010000 		.4byte	.LASF65
 2173 071e 01       		.byte	0x1
 2174 071f 7506     		.2byte	0x675
 2175 0721 77000000 		.4byte	0x77
 2176 0725 C5020000 		.4byte	.LLST18
 2177 0729 20       		.uleb128 0x20
 2178 072a 20000000 		.4byte	.LBB4
 2179 072e 14000000 		.4byte	.LBE4-.LBB4
 2180 0732 45070000 		.4byte	0x745
 2181 0736 1B       		.uleb128 0x1b
 2182 0737 6900     		.ascii	"i\000"
 2183 0739 01       		.byte	0x1
 2184 073a 8206     		.2byte	0x682
 2185 073c 77000000 		.4byte	0x77
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 84


 2186 0740 07030000 		.4byte	.LLST19
 2187 0744 00       		.byte	0
 2188 0745 11       		.uleb128 0x11
 2189 0746 14000000 		.4byte	.LVL63
 2190 074a 19060000 		.4byte	0x619
 2191 074e 59070000 		.4byte	0x759
 2192 0752 12       		.uleb128 0x12
 2193 0753 01       		.uleb128 0x1
 2194 0754 50       		.byte	0x50
 2195 0755 02       		.uleb128 0x2
 2196 0756 75       		.byte	0x75
 2197 0757 00       		.sleb128 0
 2198 0758 00       		.byte	0
 2199 0759 11       		.uleb128 0x11
 2200 075a 1E000000 		.4byte	.LVL64
 2201 075e 19060000 		.4byte	0x619
 2202 0762 6D070000 		.4byte	0x76d
 2203 0766 12       		.uleb128 0x12
 2204 0767 01       		.uleb128 0x1
 2205 0768 50       		.byte	0x50
 2206 0769 02       		.uleb128 0x2
 2207 076a 75       		.byte	0x75
 2208 076b 00       		.sleb128 0
 2209 076c 00       		.byte	0
 2210 076d 13       		.uleb128 0x13
 2211 076e 3A000000 		.4byte	.LVL69
 2212 0772 B8060000 		.4byte	0x6b8
 2213 0776 12       		.uleb128 0x12
 2214 0777 01       		.uleb128 0x1
 2215 0778 50       		.byte	0x50
 2216 0779 02       		.uleb128 0x2
 2217 077a 75       		.byte	0x75
 2218 077b 00       		.sleb128 0
 2219 077c 00       		.byte	0
 2220 077d 00       		.byte	0
 2221 077e 1E       		.uleb128 0x1e
 2222 077f 04       		.byte	0x4
 2223 0780 6B000000 		.4byte	0x6b
 2224 0784 14       		.uleb128 0x14
 2225 0785 36060000 		.4byte	.LASF68
 2226 0789 01       		.byte	0x1
 2227 078a FC08     		.2byte	0x8fc
 2228 078c 00000000 		.4byte	.LFB14
 2229 0790 18000000 		.4byte	.LFE14-.LFB14
 2230 0794 01       		.uleb128 0x1
 2231 0795 9C       		.byte	0x9c
 2232 0796 AB070000 		.4byte	0x7ab
 2233 079a 15       		.uleb128 0x15
 2234 079b 14040000 		.4byte	.LASF60
 2235 079f 01       		.byte	0x1
 2236 07a0 FC08     		.2byte	0x8fc
 2237 07a2 6B000000 		.4byte	0x6b
 2238 07a6 31030000 		.4byte	.LLST20
 2239 07aa 00       		.byte	0
 2240 07ab 14       		.uleb128 0x14
 2241 07ac 5A030000 		.4byte	.LASF69
 2242 07b0 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 85


 2243 07b1 1A09     		.2byte	0x91a
 2244 07b3 00000000 		.4byte	.LFB15
 2245 07b7 0C000000 		.4byte	.LFE15-.LFB15
 2246 07bb 01       		.uleb128 0x1
 2247 07bc 9C       		.byte	0x9c
 2248 07bd D0070000 		.4byte	0x7d0
 2249 07c1 1C       		.uleb128 0x1c
 2250 07c2 1E060000 		.4byte	.LASF70
 2251 07c6 01       		.byte	0x1
 2252 07c7 1A09     		.2byte	0x91a
 2253 07c9 6B000000 		.4byte	0x6b
 2254 07cd 01       		.uleb128 0x1
 2255 07ce 50       		.byte	0x50
 2256 07cf 00       		.byte	0
 2257 07d0 19       		.uleb128 0x19
 2258 07d1 83020000 		.4byte	.LASF71
 2259 07d5 01       		.byte	0x1
 2260 07d6 3309     		.2byte	0x933
 2261 07d8 6B000000 		.4byte	0x6b
 2262 07dc 00000000 		.4byte	.LFB16
 2263 07e0 20000000 		.4byte	.LFE16-.LFB16
 2264 07e4 01       		.uleb128 0x1
 2265 07e5 9C       		.byte	0x9c
 2266 07e6 0A080000 		.4byte	0x80a
 2267 07ea 15       		.uleb128 0x15
 2268 07eb 14040000 		.4byte	.LASF60
 2269 07ef 01       		.byte	0x1
 2270 07f0 3309     		.2byte	0x933
 2271 07f2 6B000000 		.4byte	0x6b
 2272 07f6 52030000 		.4byte	.LLST21
 2273 07fa 1B       		.uleb128 0x1b
 2274 07fb 637200   		.ascii	"cr\000"
 2275 07fe 01       		.byte	0x1
 2276 07ff 3509     		.2byte	0x935
 2277 0801 6B000000 		.4byte	0x6b
 2278 0805 8C030000 		.4byte	.LLST22
 2279 0809 00       		.byte	0
 2280 080a 14       		.uleb128 0x14
 2281 080b 59010000 		.4byte	.LASF72
 2282 080f 01       		.byte	0x1
 2283 0810 5C09     		.2byte	0x95c
 2284 0812 00000000 		.4byte	.LFB17
 2285 0816 20000000 		.4byte	.LFE17-.LFB17
 2286 081a 01       		.uleb128 0x1
 2287 081b 9C       		.byte	0x9c
 2288 081c 2F080000 		.4byte	0x82f
 2289 0820 1C       		.uleb128 0x1c
 2290 0821 CA000000 		.4byte	.LASF73
 2291 0825 01       		.byte	0x1
 2292 0826 5C09     		.2byte	0x95c
 2293 0828 6B000000 		.4byte	0x6b
 2294 082c 01       		.uleb128 0x1
 2295 082d 50       		.byte	0x50
 2296 082e 00       		.byte	0
 2297 082f 19       		.uleb128 0x19
 2298 0830 E2000000 		.4byte	.LASF74
 2299 0834 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 86


 2300 0835 9509     		.2byte	0x995
 2301 0837 6B000000 		.4byte	0x6b
 2302 083b 00000000 		.4byte	.LFB18
 2303 083f 18000000 		.4byte	.LFE18-.LFB18
 2304 0843 01       		.uleb128 0x1
 2305 0844 9C       		.byte	0x9c
 2306 0845 5A080000 		.4byte	0x85a
 2307 0849 18       		.uleb128 0x18
 2308 084a 19000000 		.4byte	.LASF75
 2309 084e 01       		.byte	0x1
 2310 084f 9709     		.2byte	0x997
 2311 0851 6B000000 		.4byte	0x6b
 2312 0855 C2030000 		.4byte	.LLST23
 2313 0859 00       		.byte	0
 2314 085a 1A       		.uleb128 0x1a
 2315 085b 7C040000 		.4byte	.LASF77
 2316 085f 01       		.byte	0x1
 2317 0860 AD09     		.2byte	0x9ad
 2318 0862 6B000000 		.4byte	0x6b
 2319 0866 00000000 		.4byte	.LFB19
 2320 086a 10000000 		.4byte	.LFE19-.LFB19
 2321 086e 01       		.uleb128 0x1
 2322 086f 9C       		.byte	0x9c
 2323 0870 17       		.uleb128 0x17
 2324 0871 11010000 		.4byte	.LASF79
 2325 0875 01       		.byte	0x1
 2326 0876 BB09     		.2byte	0x9bb
 2327 0878 00000000 		.4byte	.LFB20
 2328 087c 10000000 		.4byte	.LFE20-.LFB20
 2329 0880 01       		.uleb128 0x1
 2330 0881 9C       		.byte	0x9c
 2331 0882 17       		.uleb128 0x17
 2332 0883 F4010000 		.4byte	.LASF80
 2333 0887 01       		.byte	0x1
 2334 0888 D109     		.2byte	0x9d1
 2335 088a 00000000 		.4byte	.LFB21
 2336 088e 10000000 		.4byte	.LFE21-.LFB21
 2337 0892 01       		.uleb128 0x1
 2338 0893 9C       		.byte	0x9c
 2339 0894 21       		.uleb128 0x21
 2340 0895 1D040000 		.4byte	.LASF81
 2341 0899 01       		.byte	0x1
 2342 089a 28       		.byte	0x28
 2343 089b 6B000000 		.4byte	0x6b
 2344 089f 05       		.uleb128 0x5
 2345 08a0 03       		.byte	0x3
 2346 08a1 00000000 		.4byte	USBUART_initVar
 2347 08a5 22       		.uleb128 0x22
 2348 08a6 62020000 		.4byte	.LASF82
 2349 08aa 03       		.byte	0x3
 2350 08ab D202     		.2byte	0x2d2
 2351 08ad B0000000 		.4byte	0xb0
 2352 08b1 22       		.uleb128 0x22
 2353 08b2 9D010000 		.4byte	.LASF83
 2354 08b6 03       		.byte	0x3
 2355 08b7 D302     		.2byte	0x2d3
 2356 08b9 B0000000 		.4byte	0xb0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 87


 2357 08bd 22       		.uleb128 0x22
 2358 08be 44000000 		.4byte	.LASF84
 2359 08c2 03       		.byte	0x3
 2360 08c3 D402     		.2byte	0x2d4
 2361 08c5 B0000000 		.4byte	0xb0
 2362 08c9 22       		.uleb128 0x22
 2363 08ca 18020000 		.4byte	.LASF85
 2364 08ce 03       		.byte	0x3
 2365 08cf D502     		.2byte	0x2d5
 2366 08d1 B0000000 		.4byte	0xb0
 2367 08d5 22       		.uleb128 0x22
 2368 08d6 5A000000 		.4byte	.LASF86
 2369 08da 03       		.byte	0x3
 2370 08db D602     		.2byte	0x2d6
 2371 08dd B0000000 		.4byte	0xb0
 2372 08e1 23       		.uleb128 0x23
 2373 08e2 5D050000 		.4byte	.LASF87
 2374 08e6 04       		.byte	0x4
 2375 08e7 72       		.byte	0x72
 2376 08e8 B0000000 		.4byte	0xb0
 2377 08ec 0A       		.uleb128 0xa
 2378 08ed B0000000 		.4byte	0xb0
 2379 08f1 FC080000 		.4byte	0x8fc
 2380 08f5 0B       		.uleb128 0xb
 2381 08f6 CD000000 		.4byte	0xcd
 2382 08fa 01       		.byte	0x1
 2383 08fb 00       		.byte	0
 2384 08fc 23       		.uleb128 0x23
 2385 08fd 34010000 		.4byte	.LASF88
 2386 0901 04       		.byte	0x4
 2387 0902 73       		.byte	0x73
 2388 0903 07090000 		.4byte	0x907
 2389 0907 05       		.uleb128 0x5
 2390 0908 EC080000 		.4byte	0x8ec
 2391 090c 23       		.uleb128 0x23
 2392 090d 99020000 		.4byte	.LASF89
 2393 0911 04       		.byte	0x4
 2394 0912 75       		.byte	0x75
 2395 0913 B0000000 		.4byte	0xb0
 2396 0917 0A       		.uleb128 0xa
 2397 0918 27090000 		.4byte	0x927
 2398 091c 27090000 		.4byte	0x927
 2399 0920 0B       		.uleb128 0xb
 2400 0921 CD000000 		.4byte	0xcd
 2401 0925 08       		.byte	0x8
 2402 0926 00       		.byte	0
 2403 0927 05       		.uleb128 0x5
 2404 0928 49010000 		.4byte	0x149
 2405 092c 23       		.uleb128 0x23
 2406 092d 4B060000 		.4byte	.LASF90
 2407 0931 04       		.byte	0x4
 2408 0932 79       		.byte	0x79
 2409 0933 37090000 		.4byte	0x937
 2410 0937 05       		.uleb128 0x5
 2411 0938 17090000 		.4byte	0x917
 2412 093c 23       		.uleb128 0x23
 2413 093d A9030000 		.4byte	.LASF91
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 88


 2414 0941 04       		.byte	0x4
 2415 0942 9B       		.byte	0x9b
 2416 0943 B0000000 		.4byte	0xb0
 2417 0947 24       		.uleb128 0x24
 2418 0948 46050000 		.4byte	.LASF92
 2419 094c 46050000 		.4byte	.LASF92
 2420 0950 05       		.byte	0x5
 2421 0951 7D       		.byte	0x7d
 2422 0952 24       		.uleb128 0x24
 2423 0953 BA020000 		.4byte	.LASF93
 2424 0957 BA020000 		.4byte	.LASF93
 2425 095b 05       		.byte	0x5
 2426 095c 77       		.byte	0x77
 2427 095d 24       		.uleb128 0x24
 2428 095e 6F000000 		.4byte	.LASF94
 2429 0962 6F000000 		.4byte	.LASF94
 2430 0966 05       		.byte	0x5
 2431 0967 7E       		.byte	0x7e
 2432 0968 24       		.uleb128 0x24
 2433 0969 86010000 		.4byte	.LASF95
 2434 096d 86010000 		.4byte	.LASF95
 2435 0971 05       		.byte	0x5
 2436 0972 8B       		.byte	0x8b
 2437 0973 24       		.uleb128 0x24
 2438 0974 0E050000 		.4byte	.LASF96
 2439 0978 0E050000 		.4byte	.LASF96
 2440 097c 05       		.byte	0x5
 2441 097d 88       		.byte	0x88
 2442 097e 24       		.uleb128 0x24
 2443 097f 95030000 		.4byte	.LASF97
 2444 0983 95030000 		.4byte	.LASF97
 2445 0987 05       		.byte	0x5
 2446 0988 79       		.byte	0x79
 2447 0989 24       		.uleb128 0x24
 2448 098a BC040000 		.4byte	.LASF98
 2449 098e BC040000 		.4byte	.LASF98
 2450 0992 06       		.byte	0x6
 2451 0993 2B       		.byte	0x2b
 2452 0994 00       		.byte	0
 2453              		.section	.debug_abbrev,"",%progbits
 2454              	.Ldebug_abbrev0:
 2455 0000 01       		.uleb128 0x1
 2456 0001 11       		.uleb128 0x11
 2457 0002 01       		.byte	0x1
 2458 0003 25       		.uleb128 0x25
 2459 0004 0E       		.uleb128 0xe
 2460 0005 13       		.uleb128 0x13
 2461 0006 0B       		.uleb128 0xb
 2462 0007 03       		.uleb128 0x3
 2463 0008 0E       		.uleb128 0xe
 2464 0009 1B       		.uleb128 0x1b
 2465 000a 0E       		.uleb128 0xe
 2466 000b 55       		.uleb128 0x55
 2467 000c 17       		.uleb128 0x17
 2468 000d 11       		.uleb128 0x11
 2469 000e 01       		.uleb128 0x1
 2470 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 89


 2471 0010 17       		.uleb128 0x17
 2472 0011 00       		.byte	0
 2473 0012 00       		.byte	0
 2474 0013 02       		.uleb128 0x2
 2475 0014 24       		.uleb128 0x24
 2476 0015 00       		.byte	0
 2477 0016 0B       		.uleb128 0xb
 2478 0017 0B       		.uleb128 0xb
 2479 0018 3E       		.uleb128 0x3e
 2480 0019 0B       		.uleb128 0xb
 2481 001a 03       		.uleb128 0x3
 2482 001b 0E       		.uleb128 0xe
 2483 001c 00       		.byte	0
 2484 001d 00       		.byte	0
 2485 001e 03       		.uleb128 0x3
 2486 001f 24       		.uleb128 0x24
 2487 0020 00       		.byte	0
 2488 0021 0B       		.uleb128 0xb
 2489 0022 0B       		.uleb128 0xb
 2490 0023 3E       		.uleb128 0x3e
 2491 0024 0B       		.uleb128 0xb
 2492 0025 03       		.uleb128 0x3
 2493 0026 08       		.uleb128 0x8
 2494 0027 00       		.byte	0
 2495 0028 00       		.byte	0
 2496 0029 04       		.uleb128 0x4
 2497 002a 16       		.uleb128 0x16
 2498 002b 00       		.byte	0
 2499 002c 03       		.uleb128 0x3
 2500 002d 0E       		.uleb128 0xe
 2501 002e 3A       		.uleb128 0x3a
 2502 002f 0B       		.uleb128 0xb
 2503 0030 3B       		.uleb128 0x3b
 2504 0031 05       		.uleb128 0x5
 2505 0032 49       		.uleb128 0x49
 2506 0033 13       		.uleb128 0x13
 2507 0034 00       		.byte	0
 2508 0035 00       		.byte	0
 2509 0036 05       		.uleb128 0x5
 2510 0037 35       		.uleb128 0x35
 2511 0038 00       		.byte	0
 2512 0039 49       		.uleb128 0x49
 2513 003a 13       		.uleb128 0x13
 2514 003b 00       		.byte	0
 2515 003c 00       		.byte	0
 2516 003d 06       		.uleb128 0x6
 2517 003e 13       		.uleb128 0x13
 2518 003f 01       		.byte	0x1
 2519 0040 0B       		.uleb128 0xb
 2520 0041 0B       		.uleb128 0xb
 2521 0042 3A       		.uleb128 0x3a
 2522 0043 0B       		.uleb128 0xb
 2523 0044 3B       		.uleb128 0x3b
 2524 0045 0B       		.uleb128 0xb
 2525 0046 01       		.uleb128 0x1
 2526 0047 13       		.uleb128 0x13
 2527 0048 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 90


 2528 0049 00       		.byte	0
 2529 004a 07       		.uleb128 0x7
 2530 004b 0D       		.uleb128 0xd
 2531 004c 00       		.byte	0
 2532 004d 03       		.uleb128 0x3
 2533 004e 0E       		.uleb128 0xe
 2534 004f 3A       		.uleb128 0x3a
 2535 0050 0B       		.uleb128 0xb
 2536 0051 3B       		.uleb128 0x3b
 2537 0052 0B       		.uleb128 0xb
 2538 0053 49       		.uleb128 0x49
 2539 0054 13       		.uleb128 0x13
 2540 0055 38       		.uleb128 0x38
 2541 0056 0B       		.uleb128 0xb
 2542 0057 00       		.byte	0
 2543 0058 00       		.byte	0
 2544 0059 08       		.uleb128 0x8
 2545 005a 16       		.uleb128 0x16
 2546 005b 00       		.byte	0
 2547 005c 03       		.uleb128 0x3
 2548 005d 0E       		.uleb128 0xe
 2549 005e 3A       		.uleb128 0x3a
 2550 005f 0B       		.uleb128 0xb
 2551 0060 3B       		.uleb128 0x3b
 2552 0061 0B       		.uleb128 0xb
 2553 0062 49       		.uleb128 0x49
 2554 0063 13       		.uleb128 0x13
 2555 0064 00       		.byte	0
 2556 0065 00       		.byte	0
 2557 0066 09       		.uleb128 0x9
 2558 0067 0D       		.uleb128 0xd
 2559 0068 00       		.byte	0
 2560 0069 03       		.uleb128 0x3
 2561 006a 08       		.uleb128 0x8
 2562 006b 3A       		.uleb128 0x3a
 2563 006c 0B       		.uleb128 0xb
 2564 006d 3B       		.uleb128 0x3b
 2565 006e 0B       		.uleb128 0xb
 2566 006f 49       		.uleb128 0x49
 2567 0070 13       		.uleb128 0x13
 2568 0071 38       		.uleb128 0x38
 2569 0072 0B       		.uleb128 0xb
 2570 0073 00       		.byte	0
 2571 0074 00       		.byte	0
 2572 0075 0A       		.uleb128 0xa
 2573 0076 01       		.uleb128 0x1
 2574 0077 01       		.byte	0x1
 2575 0078 49       		.uleb128 0x49
 2576 0079 13       		.uleb128 0x13
 2577 007a 01       		.uleb128 0x1
 2578 007b 13       		.uleb128 0x13
 2579 007c 00       		.byte	0
 2580 007d 00       		.byte	0
 2581 007e 0B       		.uleb128 0xb
 2582 007f 21       		.uleb128 0x21
 2583 0080 00       		.byte	0
 2584 0081 49       		.uleb128 0x49
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 91


 2585 0082 13       		.uleb128 0x13
 2586 0083 2F       		.uleb128 0x2f
 2587 0084 0B       		.uleb128 0xb
 2588 0085 00       		.byte	0
 2589 0086 00       		.byte	0
 2590 0087 0C       		.uleb128 0xc
 2591 0088 13       		.uleb128 0x13
 2592 0089 01       		.byte	0x1
 2593 008a 0B       		.uleb128 0xb
 2594 008b 0B       		.uleb128 0xb
 2595 008c 3A       		.uleb128 0x3a
 2596 008d 0B       		.uleb128 0xb
 2597 008e 3B       		.uleb128 0x3b
 2598 008f 05       		.uleb128 0x5
 2599 0090 01       		.uleb128 0x1
 2600 0091 13       		.uleb128 0x13
 2601 0092 00       		.byte	0
 2602 0093 00       		.byte	0
 2603 0094 0D       		.uleb128 0xd
 2604 0095 0D       		.uleb128 0xd
 2605 0096 00       		.byte	0
 2606 0097 03       		.uleb128 0x3
 2607 0098 0E       		.uleb128 0xe
 2608 0099 3A       		.uleb128 0x3a
 2609 009a 0B       		.uleb128 0xb
 2610 009b 3B       		.uleb128 0x3b
 2611 009c 05       		.uleb128 0x5
 2612 009d 49       		.uleb128 0x49
 2613 009e 13       		.uleb128 0x13
 2614 009f 38       		.uleb128 0x38
 2615 00a0 0B       		.uleb128 0xb
 2616 00a1 00       		.byte	0
 2617 00a2 00       		.byte	0
 2618 00a3 0E       		.uleb128 0xe
 2619 00a4 2E       		.uleb128 0x2e
 2620 00a5 01       		.byte	0x1
 2621 00a6 3F       		.uleb128 0x3f
 2622 00a7 19       		.uleb128 0x19
 2623 00a8 03       		.uleb128 0x3
 2624 00a9 0E       		.uleb128 0xe
 2625 00aa 3A       		.uleb128 0x3a
 2626 00ab 0B       		.uleb128 0xb
 2627 00ac 3B       		.uleb128 0x3b
 2628 00ad 0B       		.uleb128 0xb
 2629 00ae 27       		.uleb128 0x27
 2630 00af 19       		.uleb128 0x19
 2631 00b0 11       		.uleb128 0x11
 2632 00b1 01       		.uleb128 0x1
 2633 00b2 12       		.uleb128 0x12
 2634 00b3 06       		.uleb128 0x6
 2635 00b4 40       		.uleb128 0x40
 2636 00b5 18       		.uleb128 0x18
 2637 00b6 9742     		.uleb128 0x2117
 2638 00b8 19       		.uleb128 0x19
 2639 00b9 01       		.uleb128 0x1
 2640 00ba 13       		.uleb128 0x13
 2641 00bb 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 92


 2642 00bc 00       		.byte	0
 2643 00bd 0F       		.uleb128 0xf
 2644 00be 34       		.uleb128 0x34
 2645 00bf 00       		.byte	0
 2646 00c0 03       		.uleb128 0x3
 2647 00c1 0E       		.uleb128 0xe
 2648 00c2 3A       		.uleb128 0x3a
 2649 00c3 0B       		.uleb128 0xb
 2650 00c4 3B       		.uleb128 0x3b
 2651 00c5 0B       		.uleb128 0xb
 2652 00c6 49       		.uleb128 0x49
 2653 00c7 13       		.uleb128 0x13
 2654 00c8 02       		.uleb128 0x2
 2655 00c9 17       		.uleb128 0x17
 2656 00ca 00       		.byte	0
 2657 00cb 00       		.byte	0
 2658 00cc 10       		.uleb128 0x10
 2659 00cd 898201   		.uleb128 0x4109
 2660 00d0 00       		.byte	0
 2661 00d1 11       		.uleb128 0x11
 2662 00d2 01       		.uleb128 0x1
 2663 00d3 31       		.uleb128 0x31
 2664 00d4 13       		.uleb128 0x13
 2665 00d5 00       		.byte	0
 2666 00d6 00       		.byte	0
 2667 00d7 11       		.uleb128 0x11
 2668 00d8 898201   		.uleb128 0x4109
 2669 00db 01       		.byte	0x1
 2670 00dc 11       		.uleb128 0x11
 2671 00dd 01       		.uleb128 0x1
 2672 00de 31       		.uleb128 0x31
 2673 00df 13       		.uleb128 0x13
 2674 00e0 01       		.uleb128 0x1
 2675 00e1 13       		.uleb128 0x13
 2676 00e2 00       		.byte	0
 2677 00e3 00       		.byte	0
 2678 00e4 12       		.uleb128 0x12
 2679 00e5 8A8201   		.uleb128 0x410a
 2680 00e8 00       		.byte	0
 2681 00e9 02       		.uleb128 0x2
 2682 00ea 18       		.uleb128 0x18
 2683 00eb 9142     		.uleb128 0x2111
 2684 00ed 18       		.uleb128 0x18
 2685 00ee 00       		.byte	0
 2686 00ef 00       		.byte	0
 2687 00f0 13       		.uleb128 0x13
 2688 00f1 898201   		.uleb128 0x4109
 2689 00f4 01       		.byte	0x1
 2690 00f5 11       		.uleb128 0x11
 2691 00f6 01       		.uleb128 0x1
 2692 00f7 31       		.uleb128 0x31
 2693 00f8 13       		.uleb128 0x13
 2694 00f9 00       		.byte	0
 2695 00fa 00       		.byte	0
 2696 00fb 14       		.uleb128 0x14
 2697 00fc 2E       		.uleb128 0x2e
 2698 00fd 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 93


 2699 00fe 3F       		.uleb128 0x3f
 2700 00ff 19       		.uleb128 0x19
 2701 0100 03       		.uleb128 0x3
 2702 0101 0E       		.uleb128 0xe
 2703 0102 3A       		.uleb128 0x3a
 2704 0103 0B       		.uleb128 0xb
 2705 0104 3B       		.uleb128 0x3b
 2706 0105 05       		.uleb128 0x5
 2707 0106 27       		.uleb128 0x27
 2708 0107 19       		.uleb128 0x19
 2709 0108 11       		.uleb128 0x11
 2710 0109 01       		.uleb128 0x1
 2711 010a 12       		.uleb128 0x12
 2712 010b 06       		.uleb128 0x6
 2713 010c 40       		.uleb128 0x40
 2714 010d 18       		.uleb128 0x18
 2715 010e 9742     		.uleb128 0x2117
 2716 0110 19       		.uleb128 0x19
 2717 0111 01       		.uleb128 0x1
 2718 0112 13       		.uleb128 0x13
 2719 0113 00       		.byte	0
 2720 0114 00       		.byte	0
 2721 0115 15       		.uleb128 0x15
 2722 0116 05       		.uleb128 0x5
 2723 0117 00       		.byte	0
 2724 0118 03       		.uleb128 0x3
 2725 0119 0E       		.uleb128 0xe
 2726 011a 3A       		.uleb128 0x3a
 2727 011b 0B       		.uleb128 0xb
 2728 011c 3B       		.uleb128 0x3b
 2729 011d 05       		.uleb128 0x5
 2730 011e 49       		.uleb128 0x49
 2731 011f 13       		.uleb128 0x13
 2732 0120 02       		.uleb128 0x2
 2733 0121 17       		.uleb128 0x17
 2734 0122 00       		.byte	0
 2735 0123 00       		.byte	0
 2736 0124 16       		.uleb128 0x16
 2737 0125 05       		.uleb128 0x5
 2738 0126 00       		.byte	0
 2739 0127 03       		.uleb128 0x3
 2740 0128 0E       		.uleb128 0xe
 2741 0129 3A       		.uleb128 0x3a
 2742 012a 0B       		.uleb128 0xb
 2743 012b 3B       		.uleb128 0x3b
 2744 012c 0B       		.uleb128 0xb
 2745 012d 49       		.uleb128 0x49
 2746 012e 13       		.uleb128 0x13
 2747 012f 02       		.uleb128 0x2
 2748 0130 17       		.uleb128 0x17
 2749 0131 00       		.byte	0
 2750 0132 00       		.byte	0
 2751 0133 17       		.uleb128 0x17
 2752 0134 2E       		.uleb128 0x2e
 2753 0135 00       		.byte	0
 2754 0136 3F       		.uleb128 0x3f
 2755 0137 19       		.uleb128 0x19
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 94


 2756 0138 03       		.uleb128 0x3
 2757 0139 0E       		.uleb128 0xe
 2758 013a 3A       		.uleb128 0x3a
 2759 013b 0B       		.uleb128 0xb
 2760 013c 3B       		.uleb128 0x3b
 2761 013d 05       		.uleb128 0x5
 2762 013e 27       		.uleb128 0x27
 2763 013f 19       		.uleb128 0x19
 2764 0140 11       		.uleb128 0x11
 2765 0141 01       		.uleb128 0x1
 2766 0142 12       		.uleb128 0x12
 2767 0143 06       		.uleb128 0x6
 2768 0144 40       		.uleb128 0x40
 2769 0145 18       		.uleb128 0x18
 2770 0146 9742     		.uleb128 0x2117
 2771 0148 19       		.uleb128 0x19
 2772 0149 00       		.byte	0
 2773 014a 00       		.byte	0
 2774 014b 18       		.uleb128 0x18
 2775 014c 34       		.uleb128 0x34
 2776 014d 00       		.byte	0
 2777 014e 03       		.uleb128 0x3
 2778 014f 0E       		.uleb128 0xe
 2779 0150 3A       		.uleb128 0x3a
 2780 0151 0B       		.uleb128 0xb
 2781 0152 3B       		.uleb128 0x3b
 2782 0153 05       		.uleb128 0x5
 2783 0154 49       		.uleb128 0x49
 2784 0155 13       		.uleb128 0x13
 2785 0156 02       		.uleb128 0x2
 2786 0157 17       		.uleb128 0x17
 2787 0158 00       		.byte	0
 2788 0159 00       		.byte	0
 2789 015a 19       		.uleb128 0x19
 2790 015b 2E       		.uleb128 0x2e
 2791 015c 01       		.byte	0x1
 2792 015d 3F       		.uleb128 0x3f
 2793 015e 19       		.uleb128 0x19
 2794 015f 03       		.uleb128 0x3
 2795 0160 0E       		.uleb128 0xe
 2796 0161 3A       		.uleb128 0x3a
 2797 0162 0B       		.uleb128 0xb
 2798 0163 3B       		.uleb128 0x3b
 2799 0164 05       		.uleb128 0x5
 2800 0165 27       		.uleb128 0x27
 2801 0166 19       		.uleb128 0x19
 2802 0167 49       		.uleb128 0x49
 2803 0168 13       		.uleb128 0x13
 2804 0169 11       		.uleb128 0x11
 2805 016a 01       		.uleb128 0x1
 2806 016b 12       		.uleb128 0x12
 2807 016c 06       		.uleb128 0x6
 2808 016d 40       		.uleb128 0x40
 2809 016e 18       		.uleb128 0x18
 2810 016f 9742     		.uleb128 0x2117
 2811 0171 19       		.uleb128 0x19
 2812 0172 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 95


 2813 0173 13       		.uleb128 0x13
 2814 0174 00       		.byte	0
 2815 0175 00       		.byte	0
 2816 0176 1A       		.uleb128 0x1a
 2817 0177 2E       		.uleb128 0x2e
 2818 0178 00       		.byte	0
 2819 0179 3F       		.uleb128 0x3f
 2820 017a 19       		.uleb128 0x19
 2821 017b 03       		.uleb128 0x3
 2822 017c 0E       		.uleb128 0xe
 2823 017d 3A       		.uleb128 0x3a
 2824 017e 0B       		.uleb128 0xb
 2825 017f 3B       		.uleb128 0x3b
 2826 0180 05       		.uleb128 0x5
 2827 0181 27       		.uleb128 0x27
 2828 0182 19       		.uleb128 0x19
 2829 0183 49       		.uleb128 0x49
 2830 0184 13       		.uleb128 0x13
 2831 0185 11       		.uleb128 0x11
 2832 0186 01       		.uleb128 0x1
 2833 0187 12       		.uleb128 0x12
 2834 0188 06       		.uleb128 0x6
 2835 0189 40       		.uleb128 0x40
 2836 018a 18       		.uleb128 0x18
 2837 018b 9742     		.uleb128 0x2117
 2838 018d 19       		.uleb128 0x19
 2839 018e 00       		.byte	0
 2840 018f 00       		.byte	0
 2841 0190 1B       		.uleb128 0x1b
 2842 0191 34       		.uleb128 0x34
 2843 0192 00       		.byte	0
 2844 0193 03       		.uleb128 0x3
 2845 0194 08       		.uleb128 0x8
 2846 0195 3A       		.uleb128 0x3a
 2847 0196 0B       		.uleb128 0xb
 2848 0197 3B       		.uleb128 0x3b
 2849 0198 05       		.uleb128 0x5
 2850 0199 49       		.uleb128 0x49
 2851 019a 13       		.uleb128 0x13
 2852 019b 02       		.uleb128 0x2
 2853 019c 17       		.uleb128 0x17
 2854 019d 00       		.byte	0
 2855 019e 00       		.byte	0
 2856 019f 1C       		.uleb128 0x1c
 2857 01a0 05       		.uleb128 0x5
 2858 01a1 00       		.byte	0
 2859 01a2 03       		.uleb128 0x3
 2860 01a3 0E       		.uleb128 0xe
 2861 01a4 3A       		.uleb128 0x3a
 2862 01a5 0B       		.uleb128 0xb
 2863 01a6 3B       		.uleb128 0x3b
 2864 01a7 05       		.uleb128 0x5
 2865 01a8 49       		.uleb128 0x49
 2866 01a9 13       		.uleb128 0x13
 2867 01aa 02       		.uleb128 0x2
 2868 01ab 18       		.uleb128 0x18
 2869 01ac 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 96


 2870 01ad 00       		.byte	0
 2871 01ae 1D       		.uleb128 0x1d
 2872 01af 0B       		.uleb128 0xb
 2873 01b0 01       		.byte	0x1
 2874 01b1 55       		.uleb128 0x55
 2875 01b2 17       		.uleb128 0x17
 2876 01b3 00       		.byte	0
 2877 01b4 00       		.byte	0
 2878 01b5 1E       		.uleb128 0x1e
 2879 01b6 0F       		.uleb128 0xf
 2880 01b7 00       		.byte	0
 2881 01b8 0B       		.uleb128 0xb
 2882 01b9 0B       		.uleb128 0xb
 2883 01ba 49       		.uleb128 0x49
 2884 01bb 13       		.uleb128 0x13
 2885 01bc 00       		.byte	0
 2886 01bd 00       		.byte	0
 2887 01be 1F       		.uleb128 0x1f
 2888 01bf 26       		.uleb128 0x26
 2889 01c0 00       		.byte	0
 2890 01c1 49       		.uleb128 0x49
 2891 01c2 13       		.uleb128 0x13
 2892 01c3 00       		.byte	0
 2893 01c4 00       		.byte	0
 2894 01c5 20       		.uleb128 0x20
 2895 01c6 0B       		.uleb128 0xb
 2896 01c7 01       		.byte	0x1
 2897 01c8 11       		.uleb128 0x11
 2898 01c9 01       		.uleb128 0x1
 2899 01ca 12       		.uleb128 0x12
 2900 01cb 06       		.uleb128 0x6
 2901 01cc 01       		.uleb128 0x1
 2902 01cd 13       		.uleb128 0x13
 2903 01ce 00       		.byte	0
 2904 01cf 00       		.byte	0
 2905 01d0 21       		.uleb128 0x21
 2906 01d1 34       		.uleb128 0x34
 2907 01d2 00       		.byte	0
 2908 01d3 03       		.uleb128 0x3
 2909 01d4 0E       		.uleb128 0xe
 2910 01d5 3A       		.uleb128 0x3a
 2911 01d6 0B       		.uleb128 0xb
 2912 01d7 3B       		.uleb128 0x3b
 2913 01d8 0B       		.uleb128 0xb
 2914 01d9 49       		.uleb128 0x49
 2915 01da 13       		.uleb128 0x13
 2916 01db 3F       		.uleb128 0x3f
 2917 01dc 19       		.uleb128 0x19
 2918 01dd 02       		.uleb128 0x2
 2919 01de 18       		.uleb128 0x18
 2920 01df 00       		.byte	0
 2921 01e0 00       		.byte	0
 2922 01e1 22       		.uleb128 0x22
 2923 01e2 34       		.uleb128 0x34
 2924 01e3 00       		.byte	0
 2925 01e4 03       		.uleb128 0x3
 2926 01e5 0E       		.uleb128 0xe
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 97


 2927 01e6 3A       		.uleb128 0x3a
 2928 01e7 0B       		.uleb128 0xb
 2929 01e8 3B       		.uleb128 0x3b
 2930 01e9 05       		.uleb128 0x5
 2931 01ea 49       		.uleb128 0x49
 2932 01eb 13       		.uleb128 0x13
 2933 01ec 3F       		.uleb128 0x3f
 2934 01ed 19       		.uleb128 0x19
 2935 01ee 3C       		.uleb128 0x3c
 2936 01ef 19       		.uleb128 0x19
 2937 01f0 00       		.byte	0
 2938 01f1 00       		.byte	0
 2939 01f2 23       		.uleb128 0x23
 2940 01f3 34       		.uleb128 0x34
 2941 01f4 00       		.byte	0
 2942 01f5 03       		.uleb128 0x3
 2943 01f6 0E       		.uleb128 0xe
 2944 01f7 3A       		.uleb128 0x3a
 2945 01f8 0B       		.uleb128 0xb
 2946 01f9 3B       		.uleb128 0x3b
 2947 01fa 0B       		.uleb128 0xb
 2948 01fb 49       		.uleb128 0x49
 2949 01fc 13       		.uleb128 0x13
 2950 01fd 3F       		.uleb128 0x3f
 2951 01fe 19       		.uleb128 0x19
 2952 01ff 3C       		.uleb128 0x3c
 2953 0200 19       		.uleb128 0x19
 2954 0201 00       		.byte	0
 2955 0202 00       		.byte	0
 2956 0203 24       		.uleb128 0x24
 2957 0204 2E       		.uleb128 0x2e
 2958 0205 00       		.byte	0
 2959 0206 3F       		.uleb128 0x3f
 2960 0207 19       		.uleb128 0x19
 2961 0208 3C       		.uleb128 0x3c
 2962 0209 19       		.uleb128 0x19
 2963 020a 6E       		.uleb128 0x6e
 2964 020b 0E       		.uleb128 0xe
 2965 020c 03       		.uleb128 0x3
 2966 020d 0E       		.uleb128 0xe
 2967 020e 3A       		.uleb128 0x3a
 2968 020f 0B       		.uleb128 0xb
 2969 0210 3B       		.uleb128 0x3b
 2970 0211 0B       		.uleb128 0xb
 2971 0212 00       		.byte	0
 2972 0213 00       		.byte	0
 2973 0214 00       		.byte	0
 2974              		.section	.debug_loc,"",%progbits
 2975              	.Ldebug_loc0:
 2976              	.LLST0:
 2977 0000 08000000 		.4byte	.LVL1
 2978 0004 0A010000 		.4byte	.LVL21
 2979 0008 0100     		.2byte	0x1
 2980 000a 57       		.byte	0x57
 2981 000b 00000000 		.4byte	0
 2982 000f 00000000 		.4byte	0
 2983              	.LLST1:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 98


 2984 0013 00000000 		.4byte	.LVL22
 2985 0017 7C000000 		.4byte	.LVL23
 2986 001b 0100     		.2byte	0x1
 2987 001d 50       		.byte	0x50
 2988 001e 7C000000 		.4byte	.LVL23
 2989 0022 B8000000 		.4byte	.LFE2
 2990 0026 0400     		.2byte	0x4
 2991 0028 F3       		.byte	0xf3
 2992 0029 01       		.uleb128 0x1
 2993 002a 50       		.byte	0x50
 2994 002b 9F       		.byte	0x9f
 2995 002c 00000000 		.4byte	0
 2996 0030 00000000 		.4byte	0
 2997              	.LLST2:
 2998 0034 00000000 		.4byte	.LVL22
 2999 0038 7F000000 		.4byte	.LVL24-1
 3000 003c 0100     		.2byte	0x1
 3001 003e 51       		.byte	0x51
 3002 003f 7F000000 		.4byte	.LVL24-1
 3003 0043 B8000000 		.4byte	.LFE2
 3004 0047 0400     		.2byte	0x4
 3005 0049 F3       		.byte	0xf3
 3006 004a 01       		.uleb128 0x1
 3007 004b 51       		.byte	0x51
 3008 004c 9F       		.byte	0x9f
 3009 004d 00000000 		.4byte	0
 3010 0051 00000000 		.4byte	0
 3011              	.LLST3:
 3012 0055 00000000 		.4byte	.LVL25
 3013 0059 0F000000 		.4byte	.LVL26-1
 3014 005d 0100     		.2byte	0x1
 3015 005f 50       		.byte	0x50
 3016 0060 0F000000 		.4byte	.LVL26-1
 3017 0064 24000000 		.4byte	.LFE0
 3018 0068 0400     		.2byte	0x4
 3019 006a F3       		.byte	0xf3
 3020 006b 01       		.uleb128 0x1
 3021 006c 50       		.byte	0x50
 3022 006d 9F       		.byte	0x9f
 3023 006e 00000000 		.4byte	0
 3024 0072 00000000 		.4byte	0
 3025              	.LLST4:
 3026 0076 00000000 		.4byte	.LVL25
 3027 007a 0F000000 		.4byte	.LVL26-1
 3028 007e 0100     		.2byte	0x1
 3029 0080 51       		.byte	0x51
 3030 0081 0F000000 		.4byte	.LVL26-1
 3031 0085 24000000 		.4byte	.LFE0
 3032 0089 0400     		.2byte	0x4
 3033 008b F3       		.byte	0xf3
 3034 008c 01       		.uleb128 0x1
 3035 008d 51       		.byte	0x51
 3036 008e 9F       		.byte	0x9f
 3037 008f 00000000 		.4byte	0
 3038 0093 00000000 		.4byte	0
 3039              	.LLST5:
 3040 0097 06000000 		.4byte	.LVL28
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 99


 3041 009b 47000000 		.4byte	.LVL29-1
 3042 009f 0100     		.2byte	0x1
 3043 00a1 50       		.byte	0x50
 3044 00a2 00000000 		.4byte	0
 3045 00a6 00000000 		.4byte	0
 3046              	.LLST6:
 3047 00aa 06000000 		.4byte	.LVL31
 3048 00ae 10000000 		.4byte	.LVL32
 3049 00b2 0100     		.2byte	0x1
 3050 00b4 53       		.byte	0x53
 3051 00b5 00000000 		.4byte	0
 3052 00b9 00000000 		.4byte	0
 3053              	.LLST7:
 3054 00bd 00000000 		.4byte	.LVL33
 3055 00c1 10000000 		.4byte	.LVL34
 3056 00c5 0200     		.2byte	0x2
 3057 00c7 30       		.byte	0x30
 3058 00c8 9F       		.byte	0x9f
 3059 00c9 10000000 		.4byte	.LVL34
 3060 00cd 16000000 		.4byte	.LVL35
 3061 00d1 0100     		.2byte	0x1
 3062 00d3 50       		.byte	0x50
 3063 00d4 16000000 		.4byte	.LVL35
 3064 00d8 18000000 		.4byte	.LVL36
 3065 00dc 0200     		.2byte	0x2
 3066 00de 30       		.byte	0x30
 3067 00df 9F       		.byte	0x9f
 3068 00e0 18000000 		.4byte	.LVL36
 3069 00e4 20000000 		.4byte	.LFE7
 3070 00e8 0100     		.2byte	0x1
 3071 00ea 50       		.byte	0x50
 3072 00eb 00000000 		.4byte	0
 3073 00ef 00000000 		.4byte	0
 3074              	.LLST8:
 3075 00f3 00000000 		.4byte	.LVL37
 3076 00f7 04000000 		.4byte	.LVL38
 3077 00fb 0100     		.2byte	0x1
 3078 00fd 50       		.byte	0x50
 3079 00fe 04000000 		.4byte	.LVL38
 3080 0102 0C000000 		.4byte	.LFE8
 3081 0106 0400     		.2byte	0x4
 3082 0108 F3       		.byte	0xf3
 3083 0109 01       		.uleb128 0x1
 3084 010a 50       		.byte	0x50
 3085 010b 9F       		.byte	0x9f
 3086 010c 00000000 		.4byte	0
 3087 0110 00000000 		.4byte	0
 3088              	.LLST9:
 3089 0114 00000000 		.4byte	.LVL39
 3090 0118 04000000 		.4byte	.LVL40
 3091 011c 0100     		.2byte	0x1
 3092 011e 50       		.byte	0x50
 3093 011f 04000000 		.4byte	.LVL40
 3094 0123 14000000 		.4byte	.LFE9
 3095 0127 0400     		.2byte	0x4
 3096 0129 F3       		.byte	0xf3
 3097 012a 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 100


 3098 012b 50       		.byte	0x50
 3099 012c 9F       		.byte	0x9f
 3100 012d 00000000 		.4byte	0
 3101 0131 00000000 		.4byte	0
 3102              	.LLST10:
 3103 0135 00000000 		.4byte	.LVL41
 3104 0139 0C000000 		.4byte	.LVL42
 3105 013d 0100     		.2byte	0x1
 3106 013f 50       		.byte	0x50
 3107 0140 0C000000 		.4byte	.LVL42
 3108 0144 20000000 		.4byte	.LVL47
 3109 0148 0400     		.2byte	0x4
 3110 014a F3       		.byte	0xf3
 3111 014b 01       		.uleb128 0x1
 3112 014c 50       		.byte	0x50
 3113 014d 9F       		.byte	0x9f
 3114 014e 20000000 		.4byte	.LVL47
 3115 0152 22000000 		.4byte	.LVL48
 3116 0156 0100     		.2byte	0x1
 3117 0158 50       		.byte	0x50
 3118 0159 22000000 		.4byte	.LVL48
 3119 015d 28000000 		.4byte	.LFE10
 3120 0161 0400     		.2byte	0x4
 3121 0163 F3       		.byte	0xf3
 3122 0164 01       		.uleb128 0x1
 3123 0165 50       		.byte	0x50
 3124 0166 9F       		.byte	0x9f
 3125 0167 00000000 		.4byte	0
 3126 016b 00000000 		.4byte	0
 3127              	.LLST11:
 3128 016f 00000000 		.4byte	.LVL41
 3129 0173 14000000 		.4byte	.LVL43
 3130 0177 0200     		.2byte	0x2
 3131 0179 30       		.byte	0x30
 3132 017a 9F       		.byte	0x9f
 3133 017b 14000000 		.4byte	.LVL43
 3134 017f 1C000000 		.4byte	.LVL45
 3135 0183 0100     		.2byte	0x1
 3136 0185 50       		.byte	0x50
 3137 0186 1C000000 		.4byte	.LVL45
 3138 018a 1E000000 		.4byte	.LVL46
 3139 018e 0300     		.2byte	0x3
 3140 0190 70       		.byte	0x70
 3141 0191 02       		.sleb128 2
 3142 0192 9F       		.byte	0x9f
 3143 0193 1E000000 		.4byte	.LVL46
 3144 0197 20000000 		.4byte	.LVL47
 3145 019b 0100     		.2byte	0x1
 3146 019d 50       		.byte	0x50
 3147 019e 20000000 		.4byte	.LVL47
 3148 01a2 22000000 		.4byte	.LVL48
 3149 01a6 0200     		.2byte	0x2
 3150 01a8 30       		.byte	0x30
 3151 01a9 9F       		.byte	0x9f
 3152 01aa 22000000 		.4byte	.LVL48
 3153 01ae 28000000 		.4byte	.LFE10
 3154 01b2 0100     		.2byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 101


 3155 01b4 50       		.byte	0x50
 3156 01b5 00000000 		.4byte	0
 3157 01b9 00000000 		.4byte	0
 3158              	.LLST12:
 3159 01bd 00000000 		.4byte	.LVL49
 3160 01c1 7C000000 		.4byte	.LVL59
 3161 01c5 0100     		.2byte	0x1
 3162 01c7 50       		.byte	0x50
 3163 01c8 7C000000 		.4byte	.LVL59
 3164 01cc 94000000 		.4byte	.LFE11
 3165 01d0 0400     		.2byte	0x4
 3166 01d2 F3       		.byte	0xf3
 3167 01d3 01       		.uleb128 0x1
 3168 01d4 50       		.byte	0x50
 3169 01d5 9F       		.byte	0x9f
 3170 01d6 00000000 		.4byte	0
 3171 01da 00000000 		.4byte	0
 3172              	.LLST13:
 3173 01de 00000000 		.4byte	.LVL49
 3174 01e2 26000000 		.4byte	.LVL50
 3175 01e6 0100     		.2byte	0x1
 3176 01e8 52       		.byte	0x52
 3177 01e9 26000000 		.4byte	.LVL50
 3178 01ed 34000000 		.4byte	.LVL51
 3179 01f1 0400     		.2byte	0x4
 3180 01f3 F3       		.byte	0xf3
 3181 01f4 01       		.uleb128 0x1
 3182 01f5 52       		.byte	0x52
 3183 01f6 9F       		.byte	0x9f
 3184 01f7 34000000 		.4byte	.LVL51
 3185 01fb 6A000000 		.4byte	.LVL58
 3186 01ff 0100     		.2byte	0x1
 3187 0201 52       		.byte	0x52
 3188 0202 00000000 		.4byte	0
 3189 0206 00000000 		.4byte	0
 3190              	.LLST14:
 3191 020a 54000000 		.4byte	.LVL52
 3192 020e 5E000000 		.4byte	.LVL53
 3193 0212 0100     		.2byte	0x1
 3194 0214 53       		.byte	0x53
 3195 0215 60000000 		.4byte	.LVL54
 3196 0219 62000000 		.4byte	.LVL55
 3197 021d 0100     		.2byte	0x1
 3198 021f 53       		.byte	0x53
 3199 0220 64000000 		.4byte	.LVL56
 3200 0224 68000000 		.4byte	.LVL57
 3201 0228 0100     		.2byte	0x1
 3202 022a 53       		.byte	0x53
 3203 022b 00000000 		.4byte	0
 3204 022f 00000000 		.4byte	0
 3205              	.LLST15:
 3206 0233 00000000 		.4byte	.LVL60
 3207 0237 1C000000 		.4byte	.LVL61
 3208 023b 0100     		.2byte	0x1
 3209 023d 50       		.byte	0x50
 3210 023e 1C000000 		.4byte	.LVL61
 3211 0242 2C000000 		.4byte	.LFE13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 102


 3212 0246 0400     		.2byte	0x4
 3213 0248 F3       		.byte	0xf3
 3214 0249 01       		.uleb128 0x1
 3215 024a 50       		.byte	0x50
 3216 024b 9F       		.byte	0x9f
 3217 024c 00000000 		.4byte	0
 3218 0250 00000000 		.4byte	0
 3219              	.LLST16:
 3220 0254 00000000 		.4byte	.LVL62
 3221 0258 13000000 		.4byte	.LVL63-1
 3222 025c 0100     		.2byte	0x1
 3223 025e 50       		.byte	0x50
 3224 025f 13000000 		.4byte	.LVL63-1
 3225 0263 3C000000 		.4byte	.LVL70
 3226 0267 0400     		.2byte	0x4
 3227 0269 F3       		.byte	0xf3
 3228 026a 01       		.uleb128 0x1
 3229 026b 50       		.byte	0x50
 3230 026c 9F       		.byte	0x9f
 3231 026d 3C000000 		.4byte	.LVL70
 3232 0271 46000000 		.4byte	.LVL71
 3233 0275 0100     		.2byte	0x1
 3234 0277 50       		.byte	0x50
 3235 0278 46000000 		.4byte	.LVL71
 3236 027c 50000000 		.4byte	.LFE12
 3237 0280 0400     		.2byte	0x4
 3238 0282 F3       		.byte	0xf3
 3239 0283 01       		.uleb128 0x1
 3240 0284 50       		.byte	0x50
 3241 0285 9F       		.byte	0x9f
 3242 0286 00000000 		.4byte	0
 3243 028a 00000000 		.4byte	0
 3244              	.LLST17:
 3245 028e 00000000 		.4byte	.LVL62
 3246 0292 13000000 		.4byte	.LVL63-1
 3247 0296 0100     		.2byte	0x1
 3248 0298 51       		.byte	0x51
 3249 0299 13000000 		.4byte	.LVL63-1
 3250 029d 3C000000 		.4byte	.LVL70
 3251 02a1 0100     		.2byte	0x1
 3252 02a3 56       		.byte	0x56
 3253 02a4 3C000000 		.4byte	.LVL70
 3254 02a8 46000000 		.4byte	.LVL71
 3255 02ac 0100     		.2byte	0x1
 3256 02ae 51       		.byte	0x51
 3257 02af 46000000 		.4byte	.LVL71
 3258 02b3 50000000 		.4byte	.LFE12
 3259 02b7 0400     		.2byte	0x4
 3260 02b9 F3       		.byte	0xf3
 3261 02ba 01       		.uleb128 0x1
 3262 02bb 51       		.byte	0x51
 3263 02bc 9F       		.byte	0x9f
 3264 02bd 00000000 		.4byte	0
 3265 02c1 00000000 		.4byte	0
 3266              	.LLST18:
 3267 02c5 00000000 		.4byte	.LVL62
 3268 02c9 13000000 		.4byte	.LVL63-1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 103


 3269 02cd 0100     		.2byte	0x1
 3270 02cf 52       		.byte	0x52
 3271 02d0 13000000 		.4byte	.LVL63-1
 3272 02d4 20000000 		.4byte	.LVL65
 3273 02d8 0400     		.2byte	0x4
 3274 02da F3       		.byte	0xf3
 3275 02db 01       		.uleb128 0x1
 3276 02dc 52       		.byte	0x52
 3277 02dd 9F       		.byte	0x9f
 3278 02de 20000000 		.4byte	.LVL65
 3279 02e2 3C000000 		.4byte	.LVL70
 3280 02e6 0100     		.2byte	0x1
 3281 02e8 54       		.byte	0x54
 3282 02e9 3C000000 		.4byte	.LVL70
 3283 02ed 46000000 		.4byte	.LVL71
 3284 02f1 0100     		.2byte	0x1
 3285 02f3 52       		.byte	0x52
 3286 02f4 46000000 		.4byte	.LVL71
 3287 02f8 4A000000 		.4byte	.LVL72
 3288 02fc 0100     		.2byte	0x1
 3289 02fe 54       		.byte	0x54
 3290 02ff 00000000 		.4byte	0
 3291 0303 00000000 		.4byte	0
 3292              	.LLST19:
 3293 0307 20000000 		.4byte	.LVL65
 3294 030b 24000000 		.4byte	.LVL66
 3295 030f 0200     		.2byte	0x2
 3296 0311 30       		.byte	0x30
 3297 0312 9F       		.byte	0x9f
 3298 0313 24000000 		.4byte	.LVL66
 3299 0317 2E000000 		.4byte	.LVL67
 3300 031b 0100     		.2byte	0x1
 3301 031d 53       		.byte	0x53
 3302 031e 30000000 		.4byte	.LVL68
 3303 0322 39000000 		.4byte	.LVL69-1
 3304 0326 0100     		.2byte	0x1
 3305 0328 53       		.byte	0x53
 3306 0329 00000000 		.4byte	0
 3307 032d 00000000 		.4byte	0
 3308              	.LLST20:
 3309 0331 00000000 		.4byte	.LVL73
 3310 0335 0A000000 		.4byte	.LVL74
 3311 0339 0100     		.2byte	0x1
 3312 033b 50       		.byte	0x50
 3313 033c 0A000000 		.4byte	.LVL74
 3314 0340 18000000 		.4byte	.LFE14
 3315 0344 0400     		.2byte	0x4
 3316 0346 F3       		.byte	0xf3
 3317 0347 01       		.uleb128 0x1
 3318 0348 50       		.byte	0x50
 3319 0349 9F       		.byte	0x9f
 3320 034a 00000000 		.4byte	0
 3321 034e 00000000 		.4byte	0
 3322              	.LLST21:
 3323 0352 00000000 		.4byte	.LVL76
 3324 0356 0A000000 		.4byte	.LVL77
 3325 035a 0100     		.2byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 104


 3326 035c 50       		.byte	0x50
 3327 035d 0A000000 		.4byte	.LVL77
 3328 0361 16000000 		.4byte	.LVL79
 3329 0365 0400     		.2byte	0x4
 3330 0367 F3       		.byte	0xf3
 3331 0368 01       		.uleb128 0x1
 3332 0369 50       		.byte	0x50
 3333 036a 9F       		.byte	0x9f
 3334 036b 16000000 		.4byte	.LVL79
 3335 036f 18000000 		.4byte	.LVL80
 3336 0373 0100     		.2byte	0x1
 3337 0375 50       		.byte	0x50
 3338 0376 18000000 		.4byte	.LVL80
 3339 037a 20000000 		.4byte	.LFE16
 3340 037e 0400     		.2byte	0x4
 3341 0380 F3       		.byte	0xf3
 3342 0381 01       		.uleb128 0x1
 3343 0382 50       		.byte	0x50
 3344 0383 9F       		.byte	0x9f
 3345 0384 00000000 		.4byte	0
 3346 0388 00000000 		.4byte	0
 3347              	.LLST22:
 3348 038c 00000000 		.4byte	.LVL76
 3349 0390 14000000 		.4byte	.LVL78
 3350 0394 0200     		.2byte	0x2
 3351 0396 30       		.byte	0x30
 3352 0397 9F       		.byte	0x9f
 3353 0398 14000000 		.4byte	.LVL78
 3354 039c 16000000 		.4byte	.LVL79
 3355 03a0 0100     		.2byte	0x1
 3356 03a2 50       		.byte	0x50
 3357 03a3 16000000 		.4byte	.LVL79
 3358 03a7 18000000 		.4byte	.LVL80
 3359 03ab 0200     		.2byte	0x2
 3360 03ad 30       		.byte	0x30
 3361 03ae 9F       		.byte	0x9f
 3362 03af 18000000 		.4byte	.LVL80
 3363 03b3 20000000 		.4byte	.LFE16
 3364 03b7 0100     		.2byte	0x1
 3365 03b9 50       		.byte	0x50
 3366 03ba 00000000 		.4byte	0
 3367 03be 00000000 		.4byte	0
 3368              	.LLST23:
 3369 03c2 00000000 		.4byte	.LVL82
 3370 03c6 10000000 		.4byte	.LVL83
 3371 03ca 0200     		.2byte	0x2
 3372 03cc 30       		.byte	0x30
 3373 03cd 9F       		.byte	0x9f
 3374 03ce 10000000 		.4byte	.LVL83
 3375 03d2 18000000 		.4byte	.LFE18
 3376 03d6 0100     		.2byte	0x1
 3377 03d8 50       		.byte	0x50
 3378 03d9 00000000 		.4byte	0
 3379 03dd 00000000 		.4byte	0
 3380              		.section	.debug_aranges,"",%progbits
 3381 0000 C4000000 		.4byte	0xc4
 3382 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 105


 3383 0006 00000000 		.4byte	.Ldebug_info0
 3384 000a 04       		.byte	0x4
 3385 000b 00       		.byte	0
 3386 000c 0000     		.2byte	0
 3387 000e 0000     		.2byte	0
 3388 0010 00000000 		.4byte	.LFB1
 3389 0014 40010000 		.4byte	.LFE1-.LFB1
 3390 0018 00000000 		.4byte	.LFB2
 3391 001c B8000000 		.4byte	.LFE2-.LFB2
 3392 0020 00000000 		.4byte	.LFB0
 3393 0024 24000000 		.4byte	.LFE0-.LFB0
 3394 0028 00000000 		.4byte	.LFB3
 3395 002c 4C000000 		.4byte	.LFE3-.LFB3
 3396 0030 00000000 		.4byte	.LFB4
 3397 0034 B8000000 		.4byte	.LFE4-.LFB4
 3398 0038 00000000 		.4byte	.LFB5
 3399 003c 20000000 		.4byte	.LFE5-.LFB5
 3400 0040 00000000 		.4byte	.LFB6
 3401 0044 0C000000 		.4byte	.LFE6-.LFB6
 3402 0048 00000000 		.4byte	.LFB7
 3403 004c 20000000 		.4byte	.LFE7-.LFB7
 3404 0050 00000000 		.4byte	.LFB8
 3405 0054 0C000000 		.4byte	.LFE8-.LFB8
 3406 0058 00000000 		.4byte	.LFB9
 3407 005c 14000000 		.4byte	.LFE9-.LFB9
 3408 0060 00000000 		.4byte	.LFB10
 3409 0064 28000000 		.4byte	.LFE10-.LFB10
 3410 0068 00000000 		.4byte	.LFB11
 3411 006c 94000000 		.4byte	.LFE11-.LFB11
 3412 0070 00000000 		.4byte	.LFB13
 3413 0074 2C000000 		.4byte	.LFE13-.LFB13
 3414 0078 00000000 		.4byte	.LFB12
 3415 007c 50000000 		.4byte	.LFE12-.LFB12
 3416 0080 00000000 		.4byte	.LFB14
 3417 0084 18000000 		.4byte	.LFE14-.LFB14
 3418 0088 00000000 		.4byte	.LFB15
 3419 008c 0C000000 		.4byte	.LFE15-.LFB15
 3420 0090 00000000 		.4byte	.LFB16
 3421 0094 20000000 		.4byte	.LFE16-.LFB16
 3422 0098 00000000 		.4byte	.LFB17
 3423 009c 20000000 		.4byte	.LFE17-.LFB17
 3424 00a0 00000000 		.4byte	.LFB18
 3425 00a4 18000000 		.4byte	.LFE18-.LFB18
 3426 00a8 00000000 		.4byte	.LFB19
 3427 00ac 10000000 		.4byte	.LFE19-.LFB19
 3428 00b0 00000000 		.4byte	.LFB20
 3429 00b4 10000000 		.4byte	.LFE20-.LFB20
 3430 00b8 00000000 		.4byte	.LFB21
 3431 00bc 10000000 		.4byte	.LFE21-.LFB21
 3432 00c0 00000000 		.4byte	0
 3433 00c4 00000000 		.4byte	0
 3434              		.section	.debug_ranges,"",%progbits
 3435              	.Ldebug_ranges0:
 3436 0000 52000000 		.4byte	.LBB2
 3437 0004 62000000 		.4byte	.LBE2
 3438 0008 64000000 		.4byte	.LBB3
 3439 000c 68000000 		.4byte	.LBE3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 106


 3440 0010 00000000 		.4byte	0
 3441 0014 00000000 		.4byte	0
 3442 0018 00000000 		.4byte	.LFB1
 3443 001c 40010000 		.4byte	.LFE1
 3444 0020 00000000 		.4byte	.LFB2
 3445 0024 B8000000 		.4byte	.LFE2
 3446 0028 00000000 		.4byte	.LFB0
 3447 002c 24000000 		.4byte	.LFE0
 3448 0030 00000000 		.4byte	.LFB3
 3449 0034 4C000000 		.4byte	.LFE3
 3450 0038 00000000 		.4byte	.LFB4
 3451 003c B8000000 		.4byte	.LFE4
 3452 0040 00000000 		.4byte	.LFB5
 3453 0044 20000000 		.4byte	.LFE5
 3454 0048 00000000 		.4byte	.LFB6
 3455 004c 0C000000 		.4byte	.LFE6
 3456 0050 00000000 		.4byte	.LFB7
 3457 0054 20000000 		.4byte	.LFE7
 3458 0058 00000000 		.4byte	.LFB8
 3459 005c 0C000000 		.4byte	.LFE8
 3460 0060 00000000 		.4byte	.LFB9
 3461 0064 14000000 		.4byte	.LFE9
 3462 0068 00000000 		.4byte	.LFB10
 3463 006c 28000000 		.4byte	.LFE10
 3464 0070 00000000 		.4byte	.LFB11
 3465 0074 94000000 		.4byte	.LFE11
 3466 0078 00000000 		.4byte	.LFB13
 3467 007c 2C000000 		.4byte	.LFE13
 3468 0080 00000000 		.4byte	.LFB12
 3469 0084 50000000 		.4byte	.LFE12
 3470 0088 00000000 		.4byte	.LFB14
 3471 008c 18000000 		.4byte	.LFE14
 3472 0090 00000000 		.4byte	.LFB15
 3473 0094 0C000000 		.4byte	.LFE15
 3474 0098 00000000 		.4byte	.LFB16
 3475 009c 20000000 		.4byte	.LFE16
 3476 00a0 00000000 		.4byte	.LFB17
 3477 00a4 20000000 		.4byte	.LFE17
 3478 00a8 00000000 		.4byte	.LFB18
 3479 00ac 18000000 		.4byte	.LFE18
 3480 00b0 00000000 		.4byte	.LFB19
 3481 00b4 10000000 		.4byte	.LFE19
 3482 00b8 00000000 		.4byte	.LFB20
 3483 00bc 10000000 		.4byte	.LFE20
 3484 00c0 00000000 		.4byte	.LFB21
 3485 00c4 10000000 		.4byte	.LFE21
 3486 00c8 00000000 		.4byte	0
 3487 00cc 00000000 		.4byte	0
 3488              		.section	.debug_line,"",%progbits
 3489              	.Ldebug_line0:
 3490 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 3490      02007D00 
 3490      00000201 
 3490      FB0E0D00 
 3490      01010101 
 3491              	.LASF22:
 3492 0000 6570546F 		.ascii	"epToggle\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 107


 3492      67676C65 
 3492      00
 3493              	.LASF58:
 3494 0009 696E7465 		.ascii	"interfaceNumber\000"
 3494      72666163 
 3494      654E756D 
 3494      62657200 
 3495              	.LASF75:
 3496 0019 72657375 		.ascii	"result\000"
 3496      6C7400
 3497              	.LASF62:
 3498 0020 636E7472 		.ascii	"cntr\000"
 3498      00
 3499              	.LASF56:
 3500 0025 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3500      4152545F 
 3500      4973436F 
 3500      6E666967 
 3500      75726174 
 3501              	.LASF84:
 3502 0044 55534255 		.ascii	"USBUART_configuration\000"
 3502      4152545F 
 3502      636F6E66 
 3502      69677572 
 3502      6174696F 
 3503              	.LASF86:
 3504 005a 55534255 		.ascii	"USBUART_deviceStatus\000"
 3504      4152545F 
 3504      64657669 
 3504      63655374 
 3504      61747573 
 3505              	.LASF94:
 3506 006f 43794578 		.ascii	"CyExitCriticalSection\000"
 3506      69744372 
 3506      69746963 
 3506      616C5365 
 3506      6374696F 
 3507              	.LASF64:
 3508 0085 70446174 		.ascii	"pData\000"
 3508      6100
 3509              	.LASF34:
 3510 008b 6570496E 		.ascii	"epIntEn\000"
 3510      74456E00 
 3511              	.LASF2:
 3512 0093 73686F72 		.ascii	"short int\000"
 3512      7420696E 
 3512      7400
 3513              	.LASF18:
 3514 009d 73697A65 		.ascii	"sizetype\000"
 3514      74797065 
 3514      00
 3515              	.LASF46:
 3516 00a6 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3516      4152545F 
 3516      6172625F 
 3516      6570735F 
 3516      73747275 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 108


 3517              	.LASF24:
 3518 00bd 65704D6F 		.ascii	"epMode\000"
 3518      646500
 3519              	.LASF45:
 3520 00c4 61726245 		.ascii	"arbEp\000"
 3520      7000
 3521              	.LASF73:
 3522 00ca 706F7765 		.ascii	"powerStatus\000"
 3522      72537461 
 3522      74757300 
 3523              	.LASF17:
 3524 00d6 6C6F6E67 		.ascii	"long double\000"
 3524      20646F75 
 3524      626C6500 
 3525              	.LASF74:
 3526 00e2 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3526      4152545F 
 3526      52575545 
 3526      6E61626C 
 3526      656400
 3527              	.LASF50:
 3528 00f5 6D6F6465 		.ascii	"mode\000"
 3528      00
 3529              	.LASF44:
 3530 00fa 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3530      4152545F 
 3530      7369655F 
 3530      6570735F 
 3530      73747275 
 3531              	.LASF79:
 3532 0111 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3532      4152545F 
 3532      456E6162 
 3532      6C65536F 
 3532      66496E74 
 3533              	.LASF51:
 3534 0126 55534255 		.ascii	"USBUART_Start\000"
 3534      4152545F 
 3534      53746172 
 3534      7400
 3535              	.LASF88:
 3536 0134 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3536      4152545F 
 3536      696E7465 
 3536      72666163 
 3536      65536574 
 3537              	.LASF10:
 3538 014d 75696E74 		.ascii	"uint16\000"
 3538      313600
 3539              	.LASF39:
 3540 0154 72775261 		.ascii	"rwRa\000"
 3540      00
 3541              	.LASF72:
 3542 0159 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3542      4152545F 
 3542      53657450 
 3542      6F776572 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 109


 3542      53746174 
 3543              	.LASF32:
 3544 0170 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3544      4152545F 
 3544      7369655F 
 3544      65705F73 
 3544      74727563 
 3545              	.LASF95:
 3546 0186 4379496E 		.ascii	"CyIntSetPriority\000"
 3546      74536574 
 3546      5072696F 
 3546      72697479 
 3546      00
 3547              	.LASF43:
 3548 0197 73696545 		.ascii	"sieEp\000"
 3548      7000
 3549              	.LASF83:
 3550 019d 55534255 		.ascii	"USBUART_transferState\000"
 3550      4152545F 
 3550      7472616E 
 3550      73666572 
 3550      53746174 
 3551              	.LASF65:
 3552 01b3 6C656E67 		.ascii	"length\000"
 3552      746800
 3553              	.LASF49:
 3554 01ba 64657669 		.ascii	"device\000"
 3554      636500
 3555              	.LASF12:
 3556 01c1 666C6F61 		.ascii	"float\000"
 3556      7400
 3557              	.LASF76:
 3558 01c7 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3558      4152545F 
 3558      47657443 
 3558      6F6E6669 
 3558      67757261 
 3559              	.LASF66:
 3560 01e0 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3560      4152545F 
 3560      456E6162 
 3560      6C654F75 
 3560      74455000 
 3561              	.LASF80:
 3562 01f4 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3562      4152545F 
 3562      44697361 
 3562      626C6553 
 3562      6F66496E 
 3563              	.LASF6:
 3564 020a 6C6F6E67 		.ascii	"long long int\000"
 3564      206C6F6E 
 3564      6720696E 
 3564      7400
 3565              	.LASF85:
 3566 0218 55534255 		.ascii	"USBUART_configurationChanged\000"
 3566      4152545F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 110


 3566      636F6E66 
 3566      69677572 
 3566      6174696F 
 3567              	.LASF31:
 3568 0235 65704372 		.ascii	"epCr0\000"
 3568      3000
 3569              	.LASF33:
 3570 023b 65704366 		.ascii	"epCfg\000"
 3570      6700
 3571              	.LASF100:
 3572 0241 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3572      72617465 
 3572      645F536F 
 3572      75726365 
 3572      5C50536F 
 3573              	.LASF82:
 3574 0262 55534255 		.ascii	"USBUART_device\000"
 3574      4152545F 
 3574      64657669 
 3574      636500
 3575              	.LASF67:
 3576 0271 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3576      4152545F 
 3576      52656164 
 3576      4F757445 
 3576      5000
 3577              	.LASF71:
 3578 0283 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3578      4152545F 
 3578      47657445 
 3578      5041636B 
 3578      53746174 
 3579              	.LASF89:
 3580 0299 55534255 		.ascii	"USBUART_deviceAddress\000"
 3580      4152545F 
 3580      64657669 
 3580      63654164 
 3580      64726573 
 3581              	.LASF25:
 3582 02af 62756666 		.ascii	"buffOffset\000"
 3582      4F666673 
 3582      657400
 3583              	.LASF93:
 3584 02ba 43794465 		.ascii	"CyDelayUs\000"
 3584      6C617955 
 3584      7300
 3585              	.LASF1:
 3586 02c4 756E7369 		.ascii	"unsigned char\000"
 3586      676E6564 
 3586      20636861 
 3586      7200
 3587              	.LASF35:
 3588 02d2 65705372 		.ascii	"epSr\000"
 3588      00
 3589              	.LASF47:
 3590 02d7 55534255 		.ascii	"USBUART_Init\000"
 3590      4152545F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 111


 3590      496E6974 
 3590      00
 3591              	.LASF101:
 3592 02e4 433A5C55 		.ascii	"C:\\Users\\Admin\\Documents\\PSoC Creator\\lab01\\D"
 3592      73657273 
 3592      5C41646D 
 3592      696E5C44 
 3592      6F63756D 
 3593 0311 65736967 		.ascii	"esign01.cydsn\000"
 3593      6E30312E 
 3593      63796473 
 3593      6E00
 3594              	.LASF0:
 3595 031f 7369676E 		.ascii	"signed char\000"
 3595      65642063 
 3595      68617200 
 3596              	.LASF78:
 3597 032b 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3597      4152545F 
 3597      5265496E 
 3597      6974436F 
 3597      6D706F6E 
 3598              	.LASF7:
 3599 0343 6C6F6E67 		.ascii	"long long unsigned int\000"
 3599      206C6F6E 
 3599      6720756E 
 3599      7369676E 
 3599      65642069 
 3600              	.LASF69:
 3601 035a 55534255 		.ascii	"USBUART_Force\000"
 3601      4152545F 
 3601      466F7263 
 3601      6500
 3602              	.LASF42:
 3603 0368 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3603      4152545F 
 3603      6172625F 
 3603      65705F73 
 3603      74727563 
 3604              	.LASF8:
 3605 037e 756E7369 		.ascii	"unsigned int\000"
 3605      676E6564 
 3605      20696E74 
 3605      00
 3606              	.LASF41:
 3607 038b 72774472 		.ascii	"rwDr\000"
 3607      00
 3608              	.LASF37:
 3609 0390 72775761 		.ascii	"rwWa\000"
 3609      00
 3610              	.LASF97:
 3611 0395 43794465 		.ascii	"CyDelayCycles\000"
 3611      6C617943 
 3611      79636C65 
 3611      7300
 3612              	.LASF16:
 3613 03a3 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 112


 3613      3200
 3614              	.LASF91:
 3615 03a9 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3615      4152545F 
 3615      6C617374 
 3615      5061636B 
 3615      65745369 
 3616              	.LASF3:
 3617 03c0 73686F72 		.ascii	"short unsigned int\000"
 3617      7420756E 
 3617      7369676E 
 3617      65642069 
 3617      6E7400
 3618              	.LASF40:
 3619 03d3 72775261 		.ascii	"rwRaMsb\000"
 3619      4D736200 
 3620              	.LASF19:
 3621 03db 61747472 		.ascii	"attrib\000"
 3621      696200
 3622              	.LASF63:
 3623 03e2 55534255 		.ascii	"USBUART_LoadInEP\000"
 3623      4152545F 
 3623      4C6F6164 
 3623      496E4550 
 3623      00
 3624              	.LASF14:
 3625 03f3 63686172 		.ascii	"char\000"
 3625      00
 3626              	.LASF4:
 3627 03f8 6C6F6E67 		.ascii	"long int\000"
 3627      20696E74 
 3627      00
 3628              	.LASF59:
 3629 0401 55534255 		.ascii	"USBUART_GetEPState\000"
 3629      4152545F 
 3629      47657445 
 3629      50537461 
 3629      746500
 3630              	.LASF60:
 3631 0414 65704E75 		.ascii	"epNumber\000"
 3631      6D626572 
 3631      00
 3632              	.LASF81:
 3633 041d 55534255 		.ascii	"USBUART_initVar\000"
 3633      4152545F 
 3633      696E6974 
 3633      56617200 
 3634              	.LASF23:
 3635 042d 61646472 		.ascii	"addr\000"
 3635      00
 3636              	.LASF29:
 3637 0432 6570436E 		.ascii	"epCnt0\000"
 3637      743000
 3638              	.LASF9:
 3639 0439 75696E74 		.ascii	"uint8\000"
 3639      3800
 3640              	.LASF54:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 113


 3641 043f 63723152 		.ascii	"cr1Reg\000"
 3641      656700
 3642              	.LASF30:
 3643 0446 6570436E 		.ascii	"epCnt1\000"
 3643      743100
 3644              	.LASF21:
 3645 044d 68774570 		.ascii	"hwEpState\000"
 3645      53746174 
 3645      6500
 3646              	.LASF11:
 3647 0457 75696E74 		.ascii	"uint32\000"
 3647      333200
 3648              	.LASF15:
 3649 045e 72656738 		.ascii	"reg8\000"
 3649      00
 3650              	.LASF5:
 3651 0463 6C6F6E67 		.ascii	"long unsigned int\000"
 3651      20756E73 
 3651      69676E65 
 3651      6420696E 
 3651      7400
 3652              	.LASF13:
 3653 0475 646F7562 		.ascii	"double\000"
 3653      6C6500
 3654              	.LASF77:
 3655 047c 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3655      4152545F 
 3655      47657444 
 3655      65766963 
 3655      65416464 
 3656              	.LASF57:
 3657 0495 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3657      4152545F 
 3657      47657449 
 3657      6E746572 
 3657      66616365 
 3658              	.LASF20:
 3659 04b1 61706945 		.ascii	"apiEpState\000"
 3659      70537461 
 3659      746500
 3660              	.LASF98:
 3661 04bc 55534255 		.ascii	"USBUART_Dp_ClearInterrupt\000"
 3661      4152545F 
 3661      44705F43 
 3661      6C656172 
 3661      496E7465 
 3662              	.LASF26:
 3663 04d6 62756666 		.ascii	"bufferSize\000"
 3663      65725369 
 3663      7A6500
 3664              	.LASF48:
 3665 04e1 55534255 		.ascii	"USBUART_InitComponent\000"
 3665      4152545F 
 3665      496E6974 
 3665      436F6D70 
 3665      6F6E656E 
 3666              	.LASF28:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 114


 3667 04f7 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3667      42554152 
 3667      545F4550 
 3667      5F43544C 
 3667      5F424C4F 
 3668              	.LASF96:
 3669 050e 4379496E 		.ascii	"CyIntSetVector\000"
 3669      74536574 
 3669      56656374 
 3669      6F7200
 3670              	.LASF55:
 3671 051d 55534255 		.ascii	"USBUART_CheckActivity\000"
 3671      4152545F 
 3671      43686563 
 3671      6B416374 
 3671      69766974 
 3672              	.LASF61:
 3673 0533 55534255 		.ascii	"USBUART_GetEPCount\000"
 3673      4152545F 
 3673      47657445 
 3673      50436F75 
 3673      6E7400
 3674              	.LASF92:
 3675 0546 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3675      74657243 
 3675      72697469 
 3675      63616C53 
 3675      65637469 
 3676              	.LASF87:
 3677 055d 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3677      4152545F 
 3677      696E7465 
 3677      72666163 
 3677      654E756D 
 3678              	.LASF38:
 3679 0575 72775761 		.ascii	"rwWaMsb\000"
 3679      4D736200 
 3680              	.LASF99:
 3681 057d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3681      43313120 
 3681      352E342E 
 3681      31203230 
 3681      31363036 
 3682 05b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3682      20726576 
 3682      6973696F 
 3682      6E203233 
 3682      37373135 
 3683 05e3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3683      66756E63 
 3683      74696F6E 
 3683      2D736563 
 3683      74696F6E 
 3684              	.LASF36:
 3685 060b 72657365 		.ascii	"reserved\000"
 3685      72766564 
 3685      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccIxp4eB.s 			page 115


 3686              	.LASF27:
 3687 0614 696E7465 		.ascii	"interface\000"
 3687      72666163 
 3687      6500
 3688              	.LASF70:
 3689 061e 62537461 		.ascii	"bState\000"
 3689      746500
 3690              	.LASF53:
 3691 0625 656E6162 		.ascii	"enableInterrupts\000"
 3691      6C65496E 
 3691      74657272 
 3691      75707473 
 3691      00
 3692              	.LASF68:
 3693 0636 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3693      4152545F 
 3693      44697361 
 3693      626C654F 
 3693      75744550 
 3694              	.LASF90:
 3695 064b 55534255 		.ascii	"USBUART_EP\000"
 3695      4152545F 
 3695      455000
 3696              	.LASF52:
 3697 0656 55534255 		.ascii	"USBUART_Stop\000"
 3697      4152545F 
 3697      53746F70 
 3697      00
 3698              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
